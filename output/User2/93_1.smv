--IF Weather.weather = windy THEN Window.close
--IF Weather.weather = rainy THEN Window.close
--IF Motion Detector.motion = inactive THEN Window.close
--IF Humidity Sensor.humidity > 24 THEN Window.open
--IF Weather.weather = sunny THEN Window.open
--IF Weather.weather = foggy THEN Window.close
--IF Weather.weather = snowy THEN Window.close
--IF Air Quality Monitor.airQuality > 20 THEN Window.close

MODULE Weather
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_weather: {untrusted, trusted};
VAR
	weather: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
ASSIGN
	init(trust_weather):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE Window
FROZENVAR
	is_attack: boolean;
VAR
	WindowState: {closed, open};
	close_a: boolean;
	open_a: boolean;
	contact: {closed, open};
	trust_contact: {trusted};
	trust_WindowState_closed: {untrusted, trusted};
	trust_WindowState_open: {untrusted, trusted};
ASSIGN
	init(WindowState) := closed;
	init(close_a) := FALSE;
	init(open_a) := FALSE;
	init(trust_WindowState_closed) := trusted;
	init(trust_WindowState_open) := trusted;

MODULE MotionDetector
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_motion: {untrusted, trusted};
VAR
	motion: {active, inactive};
ASSIGN
	init(trust_motion):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE AirQualityMonitor
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_airQuality: {untrusted, trusted};
	trust_carbonDioxide: {untrusted, trusted};
VAR
	airQuality: 0..100;
	carbonDioxide: 0..100;
ASSIGN
	init(trust_airQuality):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;
	init(trust_carbonDioxide):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE HumiditySensor
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_humidity: {untrusted, trusted};
VAR
	humidity: 0..100;
ASSIGN
	init(trust_humidity):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE main
FROZENVAR
	intensity: 0..50;
VAR
	weather: Weather;
	window: Window;
	motiondetector: MotionDetector;
	airqualitymonitor: AirQualityMonitor;
	humiditysensor: HumiditySensor;
	a_airQuality: 0..100;
	a_motion: {active, inactive};
	a_weather: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
	a_carbonDioxide: 0..100;
	a_humidity: 0..100;
ASSIGN
	init(intensity) := 0 + toint(weather.is_attack) + toint(window.is_attack) + toint(motiondetector.is_attack) + toint(airqualitymonitor.is_attack) + toint(humiditysensor.is_attack);

	next(window.WindowState) :=
	case
		weather.weather=windy & window.is_attack=FALSE: closed;
		weather.weather=rainy & window.is_attack=FALSE: closed;
		motiondetector.motion=inactive & window.is_attack=FALSE: closed;
		humiditysensor.humidity>24 & window.is_attack=FALSE: open;
		weather.weather=sunny & window.is_attack=FALSE: open;
		weather.weather=foggy & window.is_attack=FALSE: closed;
		weather.weather=snowy & window.is_attack=FALSE: closed;
		airqualitymonitor.airQuality>20 & window.is_attack=FALSE: closed;
		window.WindowState=closed: {closed, open};
		window.WindowState=open: {closed, open};
		TRUE: window.WindowState;
	esac;

	next(a_airQuality) :=
	case
		a_airQuality=100: {toint(a_airQuality)-1, a_airQuality};
		a_airQuality>100: {100};
		a_airQuality=0: {a_airQuality, a_airQuality+1};
		a_airQuality<0: {0};
		TRUE: {a_airQuality+-1, a_airQuality, a_airQuality+1};
	esac;

	next(a_motion) :=
	case
		TRUE: {active, inactive};
	esac;

	next(a_weather) :=
	case
		TRUE: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
	esac;

	next(a_carbonDioxide) :=
	case
		a_carbonDioxide=100: {toint(a_carbonDioxide)-1, a_carbonDioxide};
		a_carbonDioxide>100: {100};
		a_carbonDioxide=0: {a_carbonDioxide, a_carbonDioxide+1};
		a_carbonDioxide<0: {0};
		TRUE: {a_carbonDioxide+-1, a_carbonDioxide, a_carbonDioxide+1};
	esac;

	next(a_humidity) :=
	case
		a_humidity=100: {toint(a_humidity)-1, a_humidity};
		a_humidity>100: {100};
		a_humidity=0: {a_humidity, a_humidity+1};
		a_humidity<0: {0};
		TRUE: {a_humidity+-1, a_humidity, a_humidity+1};
	esac;

	weather.weather:=
	case
		weather.is_attack=TRUE: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
		TRUE: a_weather;
	esac;

	next(window.contact) :=
	case
		window.WindowState=closed: closed;
		window.WindowState=open: open;
		TRUE: window.contact;
	esac;

	motiondetector.motion:=
	case
		motiondetector.is_attack=TRUE: {active, inactive};
		TRUE: a_motion;
	esac;

	airqualitymonitor.airQuality:=
	case
		airqualitymonitor.is_attack=TRUE: 0..100;
		TRUE: a_airQuality;
	esac;

	airqualitymonitor.carbonDioxide:=
	case
		airqualitymonitor.is_attack=TRUE: 0..100;
		TRUE: a_carbonDioxide;
	esac;

	humiditysensor.humidity:=
	case
		humiditysensor.is_attack=TRUE: 0..100;
		TRUE: a_humidity;
	esac;

	next(window.close_a) :=
	case
		window.WindowState!=closed & next(window.WindowState)=closed: TRUE;
		TRUE: FALSE;
	esac;

	next(window.open_a) :=
	case
		window.WindowState!=open & next(window.WindowState)=open: TRUE;
		TRUE: FALSE;
	esac;

	next(window.trust_WindowState_closed) :=
	case
		window.is_attack=TRUE: untrusted;
		weather.weather=windy & (weather.trust_weather=trusted): trusted;
		weather.weather=windy: untrusted;
		weather.weather=rainy & (weather.trust_weather=trusted): trusted;
		weather.weather=rainy: untrusted;
		motiondetector.motion=inactive & (motiondetector.trust_motion=trusted): trusted;
		motiondetector.motion=inactive: untrusted;
		weather.weather=foggy & (weather.trust_weather=trusted): trusted;
		weather.weather=foggy: untrusted;
		weather.weather=snowy & (weather.trust_weather=trusted): trusted;
		weather.weather=snowy: untrusted;
		airqualitymonitor.airQuality>20 & (airqualitymonitor.trust_airQuality=trusted): trusted;
		airqualitymonitor.airQuality>20: untrusted;
		TRUE: window.trust_WindowState_closed;
	esac;

	next(window.trust_WindowState_open) :=
	case
		window.is_attack=TRUE: untrusted;
		humiditysensor.humidity>24 & (humiditysensor.trust_humidity=trusted): trusted;
		humiditysensor.humidity>24: untrusted;
		weather.weather=sunny & (weather.trust_weather=trusted): trusted;
		weather.weather=sunny: untrusted;
		TRUE: window.trust_WindowState_open;
	esac;

SPEC AG !(window.WindowState=open & window.trust_WindowState_open=untrusted & intensity<=2 & window.is_attack=FALSE);
