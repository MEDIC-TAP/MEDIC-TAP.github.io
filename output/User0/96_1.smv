--IF Weather.weather = windy THEN Window.close
--IF Weather.weather = rainy THEN Window.close
--IF Motion Detector.motion = inactive THEN Window.close
--IF Gas Sensor.gas > 16 THEN Window.open
--IF Smoke Sensor.smoke = detected THEN Window.open
--IF Weather.weather = sunny THEN Window.open
--IF Weather.weather = foggy THEN Window.close
--IF Weather.weather = snowy THEN Window.close
--IF Air Quality Monitor.airQuality > 20 THEN Window.close

MODULE Weather
FROZENVAR
	trust_weather: {untrusted, trusted};
VAR
	weather: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
ASSIGN
	init(trust_weather):= untrusted;

MODULE Window
VAR
	WindowState: {closed, open};
	close_a: boolean;
	open_a: boolean;
	contact: {closed, open};
	trust_contact: {trusted};
	trust_WindowState_closed: {untrusted, trusted};
	trust_WindowState_open: {untrusted, trusted};
ASSIGN
	init(WindowState) := closed;
	init(close_a) := FALSE;
	init(open_a) := FALSE;
	init(trust_WindowState_closed) := trusted;
	init(trust_WindowState_open) := trusted;

MODULE MotionDetector
FROZENVAR
	trust_motion: {untrusted, trusted};
VAR
	motion: {active, inactive};
ASSIGN
	init(trust_motion):= trusted;

MODULE GasSensor
FROZENVAR
	trust_gas: {untrusted, trusted};
VAR
	gas: 0..100;
ASSIGN
	init(trust_gas):= untrusted;

MODULE SmokeSensor
FROZENVAR
	trust_smoke: {untrusted, trusted};
VAR
	smoke: {clear, detected, tested};
ASSIGN
	init(trust_smoke):= untrusted;

MODULE AirQualityMonitor
FROZENVAR
	trust_airQuality: {untrusted, trusted};
	trust_carbonDioxide: {untrusted, trusted};
VAR
	airQuality: 0..100;
	carbonDioxide: 0..100;
ASSIGN
	init(trust_airQuality):= untrusted;
	init(trust_carbonDioxide):= untrusted;

MODULE main
VAR
	weather: Weather;
	window: Window;
	motiondetector: MotionDetector;
	gassensor: GasSensor;
	smokesensor: SmokeSensor;
	airqualitymonitor: AirQualityMonitor;
	a_airQuality: 0..100;
	a_motion: {active, inactive};
	a_weather: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
	a_gas: 0..100;
	a_smoke: {clear, detected, tested};
	a_carbonDioxide: 0..100;
ASSIGN
	next(window.WindowState) :=
	case
		weather.weather=windy: closed;
		weather.weather=rainy: closed;
		motiondetector.motion=inactive: closed;
		gassensor.gas>16: open;
		smokesensor.smoke=detected: open;
		weather.weather=sunny: open;
		weather.weather=foggy: closed;
		weather.weather=snowy: closed;
		airqualitymonitor.airQuality>20: closed;
		window.WindowState=closed: {closed, open};
		window.WindowState=open: {closed, open};
		TRUE: window.WindowState;
	esac;

	next(a_airQuality) :=
	case
		a_airQuality=100: {toint(a_airQuality)-1, a_airQuality};
		a_airQuality>100: {100};
		a_airQuality=0: {a_airQuality, a_airQuality+1};
		a_airQuality<0: {0};
		TRUE: {a_airQuality+-1, a_airQuality, a_airQuality+1};
	esac;

	next(a_motion) :=
	case
		TRUE: {active, inactive};
	esac;

	next(a_weather) :=
	case
		TRUE: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
	esac;

	next(a_gas) :=
	case
		a_gas=100: {toint(a_gas)-1, a_gas};
		a_gas>100: {100};
		a_gas=0: {a_gas, a_gas+1};
		a_gas<0: {0};
		TRUE: {a_gas+-1, a_gas, a_gas+1};
	esac;

	next(a_smoke) :=
	case
		TRUE: {clear, detected, tested};
	esac;

	next(a_carbonDioxide) :=
	case
		a_carbonDioxide=100: {toint(a_carbonDioxide)-1, a_carbonDioxide};
		a_carbonDioxide>100: {100};
		a_carbonDioxide=0: {a_carbonDioxide, a_carbonDioxide+1};
		a_carbonDioxide<0: {0};
		TRUE: {a_carbonDioxide+-1, a_carbonDioxide, a_carbonDioxide+1};
	esac;

	weather.weather := a_weather;

	next(window.contact) :=
	case
		window.WindowState=closed: closed;
		window.WindowState=open: open;
		TRUE: window.contact;
	esac;

	motiondetector.motion := a_motion;

	gassensor.gas := a_gas;

	smokesensor.smoke := a_smoke;

	airqualitymonitor.airQuality := a_airQuality;

	airqualitymonitor.carbonDioxide := a_carbonDioxide;

	next(window.close_a) :=
	case
		window.WindowState!=closed & next(window.WindowState)=closed: TRUE;
		TRUE: FALSE;
	esac;

	next(window.open_a) :=
	case
		window.WindowState!=open & next(window.WindowState)=open: TRUE;
		TRUE: FALSE;
	esac;

	next(window.trust_WindowState_closed) :=
	case
		weather.weather=windy & (weather.trust_weather=trusted): trusted;
		weather.weather=windy: untrusted;
		weather.weather=rainy & (weather.trust_weather=trusted): trusted;
		weather.weather=rainy: untrusted;
		motiondetector.motion=inactive & (motiondetector.trust_motion=trusted): trusted;
		motiondetector.motion=inactive: untrusted;
		weather.weather=foggy & (weather.trust_weather=trusted): trusted;
		weather.weather=foggy: untrusted;
		weather.weather=snowy & (weather.trust_weather=trusted): trusted;
		weather.weather=snowy: untrusted;
		airqualitymonitor.airQuality>20 & (airqualitymonitor.trust_airQuality=trusted): trusted;
		airqualitymonitor.airQuality>20: untrusted;
		TRUE: window.trust_WindowState_closed;
	esac;

	next(window.trust_WindowState_open) :=
	case
		gassensor.gas>16 & (gassensor.trust_gas=trusted): trusted;
		gassensor.gas>16: untrusted;
		smokesensor.smoke=detected & (smokesensor.trust_smoke=trusted): trusted;
		smokesensor.smoke=detected: untrusted;
		weather.weather=sunny & (weather.trust_weather=trusted): trusted;
		weather.weather=sunny: untrusted;
		TRUE: window.trust_WindowState_open;
	esac;

SPEC AG !(window.WindowState=open & window.trust_WindowState_open=untrusted);
