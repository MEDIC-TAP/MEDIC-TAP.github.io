--IF Email.receiveKey = Key THEN Online Bank.transfer money
--IF Temperature Sensor.temperature < 10 THEN Air Conditioner.heat
--IF Temperature Sensor.temperature > 30 THEN Air Conditioner.cool

MODULE TemperatureSensor
FROZENVAR
	trust_temperature: {untrusted, trusted};
VAR
	temperature: 0..100;
ASSIGN
	init(trust_temperature):= untrusted;

MODULE Email
VAR
	State: {idle, sending};
	sendmail_a: boolean;
	receiveKey: {Key, others};
	receiveMail: {idle, receive};
	trust_receiveKey: {trusted};
	trust_receiveMail: {trusted};
	trust_State_idle: {untrusted, trusted};
	trust_State_sending: {untrusted, trusted};
ASSIGN
	init(State) := idle;
	init(sendmail_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_sending) := trusted;

MODULE AirConditioner
VAR
	HvacMode: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
	auto_a: boolean;
	cool_a: boolean;
	dry_a: boolean;
	coolClean_a: boolean;
	dryClean_a: boolean;
	fanOnly_a: boolean;
	heat_a: boolean;
	heatClean_a: boolean;
	off_a: boolean;
	temperature_rate: -1..1;
	humidity_rate: -1..1;
	trust_HvacMode_auto: {untrusted, trusted};
	trust_HvacMode_cool: {untrusted, trusted};
	trust_HvacMode_coolClean: {untrusted, trusted};
	trust_HvacMode_dry: {untrusted, trusted};
	trust_HvacMode_dryClean: {untrusted, trusted};
	trust_HvacMode_fanOnly: {untrusted, trusted};
	trust_HvacMode_heat: {untrusted, trusted};
	trust_HvacMode_heatClean: {untrusted, trusted};
	trust_HvacMode_off: {untrusted, trusted};
ASSIGN
	init(HvacMode) := auto;
	init(auto_a) := FALSE;
	init(cool_a) := FALSE;
	init(dry_a) := FALSE;
	init(coolClean_a) := FALSE;
	init(dryClean_a) := FALSE;
	init(fanOnly_a) := FALSE;
	init(heat_a) := FALSE;
	init(heatClean_a) := FALSE;
	init(off_a) := FALSE;
	init(trust_HvacMode_auto) := trusted;
	init(trust_HvacMode_cool) := trusted;
	init(trust_HvacMode_dry) := trusted;
	init(trust_HvacMode_coolClean) := trusted;
	init(trust_HvacMode_dryClean) := trusted;
	init(trust_HvacMode_fanOnly) := trusted;
	init(trust_HvacMode_heat) := trusted;
	init(trust_HvacMode_heatClean) := trusted;
	init(trust_HvacMode_off) := trusted;

MODULE OnlineBank
VAR
	State: {idle, transfering};
	transfermoney_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_transfering: {untrusted, trusted};
ASSIGN
	init(State) := idle;
	init(transfermoney_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_transfering) := trusted;

MODULE main
VAR
	temperaturesensor: TemperatureSensor;
	email: Email;
	airconditioner: AirConditioner;
	onlinebank: OnlineBank;
	a_temperature: 0..100;
ASSIGN
	next(email.State) :=
	case
		email.State=sending: idle;
		email.State=idle: {idle, sending};
		email.State=sending: {sending};
		TRUE: email.State;
	esac;

	next(airconditioner.HvacMode) :=
	case
		temperaturesensor.temperature<10: heat;
		temperaturesensor.temperature>30: cool;
		airconditioner.HvacMode=auto: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=cool: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=coolClean: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=dry: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=dryClean: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=fanOnly: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=heat: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=heatClean: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=off: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		TRUE: airconditioner.HvacMode;
	esac;

	next(onlinebank.State) :=
	case
		email.receiveKey=Key: transfering;
		onlinebank.State=transfering: idle;
		onlinebank.State=idle: {idle, transfering};
		onlinebank.State=transfering: {transfering};
		TRUE: onlinebank.State;
	esac;

	next(a_temperature) :=
	case
		a_temperature=100-(airconditioner.temperature_rate): {toint(a_temperature)-1+airconditioner.temperature_rate, a_temperature+airconditioner.temperature_rate};
		a_temperature>100-(airconditioner.temperature_rate): {100};
		a_temperature=0-(airconditioner.temperature_rate): {a_temperature+airconditioner.temperature_rate, a_temperature+1+airconditioner.temperature_rate};
		a_temperature<0-(airconditioner.temperature_rate): {0};
		TRUE: {a_temperature+-1+airconditioner.temperature_rate, a_temperature+airconditioner.temperature_rate, a_temperature+1+airconditioner.temperature_rate};
	esac;

	temperaturesensor.temperature := a_temperature;

	next(email.receiveKey) :=
	case
		TRUE: {Key, others};
	esac;

	next(email.receiveMail) :=
	case
		TRUE: {idle, receive};
	esac;

	next(airconditioner.temperature_rate) :=
	case
		airconditioner.HvacMode=cool: -1;
		airconditioner.HvacMode=coolClean: -1;
		airconditioner.HvacMode=heat: 1;
		airconditioner.HvacMode=heatClean: 1;
		TRUE: 0;
	esac;

	next(airconditioner.humidity_rate) :=
	case
		airconditioner.HvacMode=dry: -1;
		airconditioner.HvacMode=dryClean: -1;
		airconditioner.HvacMode=heat: -1;
		TRUE: 0;
	esac;

	next(email.sendmail_a) :=
	case
		email.State=idle & next(email.State)=sending: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.auto_a) :=
	case
		airconditioner.HvacMode!=auto & next(airconditioner.HvacMode)=auto: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.cool_a) :=
	case
		airconditioner.HvacMode!=cool & next(airconditioner.HvacMode)=cool: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.dry_a) :=
	case
		airconditioner.HvacMode!=dry & next(airconditioner.HvacMode)=dry: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.coolClean_a) :=
	case
		airconditioner.HvacMode!=coolClean & next(airconditioner.HvacMode)=coolClean: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.dryClean_a) :=
	case
		airconditioner.HvacMode!=dryClean & next(airconditioner.HvacMode)=dryClean: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.fanOnly_a) :=
	case
		airconditioner.HvacMode!=fanOnly & next(airconditioner.HvacMode)=fanOnly: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.heat_a) :=
	case
		airconditioner.HvacMode!=heat & next(airconditioner.HvacMode)=heat: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.heatClean_a) :=
	case
		airconditioner.HvacMode!=heatClean & next(airconditioner.HvacMode)=heatClean: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.off_a) :=
	case
		airconditioner.HvacMode!=off & next(airconditioner.HvacMode)=off: TRUE;
		TRUE: FALSE;
	esac;

	next(onlinebank.transfermoney_a) :=
	case
		onlinebank.State=idle & next(onlinebank.State)=transfering: TRUE;
		TRUE: FALSE;
	esac;

	next(email.trust_State_idle) := email.trust_State_idle;

	next(email.trust_State_sending) := email.trust_State_sending;

	next(airconditioner.trust_HvacMode_auto) :=
	case
		TRUE: airconditioner.trust_HvacMode_auto;
	esac;

	next(airconditioner.trust_HvacMode_cool) :=
	case
		temperaturesensor.temperature>30 & (temperaturesensor.trust_temperature=trusted): trusted;
		temperaturesensor.temperature>30: untrusted;
		TRUE: airconditioner.trust_HvacMode_cool;
	esac;

	next(airconditioner.trust_HvacMode_dry) :=
	case
		TRUE: airconditioner.trust_HvacMode_dry;
	esac;

	next(airconditioner.trust_HvacMode_coolClean) :=
	case
		TRUE: airconditioner.trust_HvacMode_coolClean;
	esac;

	next(airconditioner.trust_HvacMode_dryClean) :=
	case
		TRUE: airconditioner.trust_HvacMode_dryClean;
	esac;

	next(airconditioner.trust_HvacMode_fanOnly) :=
	case
		TRUE: airconditioner.trust_HvacMode_fanOnly;
	esac;

	next(airconditioner.trust_HvacMode_heat) :=
	case
		temperaturesensor.temperature<10 & (temperaturesensor.trust_temperature=trusted): trusted;
		temperaturesensor.temperature<10: untrusted;
		TRUE: airconditioner.trust_HvacMode_heat;
	esac;

	next(airconditioner.trust_HvacMode_heatClean) :=
	case
		TRUE: airconditioner.trust_HvacMode_heatClean;
	esac;

	next(airconditioner.trust_HvacMode_off) :=
	case
		TRUE: airconditioner.trust_HvacMode_off;
	esac;

	next(onlinebank.trust_State_idle) :=
	case
		TRUE: onlinebank.trust_State_idle;
	esac;

	next(onlinebank.trust_State_transfering) :=
	case
		email.receiveKey=Key & (email.trust_receiveKey=trusted): trusted;
		email.receiveKey=Key: untrusted;
		TRUE: onlinebank.trust_State_transfering;
	esac;

SPEC AG !(airconditioner.HvacMode=cool & airconditioner.trust_HvacMode_cool=untrusted);
SPEC AG !(airconditioner.HvacMode=heat & airconditioner.trust_HvacMode_heat=untrusted);
SPEC AG !(airconditioner.HvacMode=auto & airconditioner.trust_HvacMode_auto=untrusted);
SPEC AG !(onlinebank.State=transfering & onlinebank.trust_State_transfering=untrusted);
