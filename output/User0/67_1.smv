--IF Humidity Sensor.humidity > 20 & Motion Detector.motion = active & Weather.weather = sunny THEN Window.open

MODULE MotionDetector
FROZENVAR
	trust_motion: {untrusted, trusted};
VAR
	motion: {active, inactive};
ASSIGN
	init(trust_motion):= trusted;

MODULE Weather
FROZENVAR
	trust_weather: {untrusted, trusted};
VAR
	weather: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
ASSIGN
	init(trust_weather):= untrusted;

MODULE Window
VAR
	WindowState: {closed, open};
	close_a: boolean;
	open_a: boolean;
	contact: {closed, open};
	trust_contact: {trusted};
	trust_WindowState_closed: {untrusted, trusted};
	trust_WindowState_open: {untrusted, trusted};
ASSIGN
	init(WindowState) := closed;
	init(close_a) := FALSE;
	init(open_a) := FALSE;
	init(trust_WindowState_closed) := trusted;
	init(trust_WindowState_open) := trusted;

MODULE HumiditySensor
FROZENVAR
	trust_humidity: {untrusted, trusted};
VAR
	humidity: 0..100;
ASSIGN
	init(trust_humidity):= untrusted;

MODULE main
VAR
	motiondetector: MotionDetector;
	weather: Weather;
	window: Window;
	humiditysensor: HumiditySensor;
	a_motion: {active, inactive};
	a_weather: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
	a_humidity: 0..100;
ASSIGN
	next(window.WindowState) :=
	case
		humiditysensor.humidity>20 & motiondetector.motion=active & weather.weather=sunny: open;
		window.WindowState=closed: {closed, open};
		window.WindowState=open: {closed, open};
		TRUE: window.WindowState;
	esac;

	next(a_motion) :=
	case
		TRUE: {active, inactive};
	esac;

	next(a_weather) :=
	case
		TRUE: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
	esac;

	next(a_humidity) :=
	case
		a_humidity=100: {toint(a_humidity)-1, a_humidity};
		a_humidity>100: {100};
		a_humidity=0: {a_humidity, a_humidity+1};
		a_humidity<0: {0};
		TRUE: {a_humidity+-1, a_humidity, a_humidity+1};
	esac;

	motiondetector.motion := a_motion;

	weather.weather := a_weather;

	next(window.contact) :=
	case
		window.WindowState=closed: closed;
		window.WindowState=open: open;
		TRUE: window.contact;
	esac;

	humiditysensor.humidity := a_humidity;

	next(window.close_a) :=
	case
		window.WindowState!=closed & next(window.WindowState)=closed: TRUE;
		TRUE: FALSE;
	esac;

	next(window.open_a) :=
	case
		window.WindowState!=open & next(window.WindowState)=open: TRUE;
		TRUE: FALSE;
	esac;

	next(window.trust_WindowState_closed) :=
	case
		TRUE: window.trust_WindowState_closed;
	esac;

	next(window.trust_WindowState_open) :=
	case
		humiditysensor.humidity>20 & motiondetector.motion=active & weather.weather=sunny & (humiditysensor.trust_humidity=trusted | motiondetector.trust_motion=trusted | weather.trust_weather=trusted): trusted;
		humiditysensor.humidity>20 & motiondetector.motion=active & weather.weather=sunny: untrusted;
		TRUE: window.trust_WindowState_open;
	esac;

SPEC AG !(window.WindowState=open & window.trust_WindowState_open=untrusted);
