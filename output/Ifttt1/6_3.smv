--IF Weather.weather = rainy THEN Sina Weibo.post
--IF Alarm.AlertState = both THEN Sina Weibo.post
--IF Temperature Sensor.temperature < 10 THEN Sina Weibo.post
--IF Motion Detector.motion = active THEN Sina Weibo.post
--IF Motion Detector.motion = active THEN Alarm.both

MODULE Weather
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_weather: {untrusted, trusted};
VAR
	weather: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
ASSIGN
	init(trust_weather):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE MotionDetector
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_motion: {untrusted, trusted};
VAR
	motion: {active, inactive};
ASSIGN
	init(trust_motion):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE SinaWeibo
FROZENVAR
	is_attack: boolean;
VAR
	State: {idle, posting};
	post_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_posting: {untrusted, trusted};
	privacy_content: {private, public};
ASSIGN
	init(State) := idle;
	init(post_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_posting) := trusted;
	init(privacy_content) := public;

MODULE TemperatureSensor
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_temperature: {untrusted, trusted};
VAR
	temperature: 0..100;
ASSIGN
	init(trust_temperature):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE Alarm
FROZENVAR
	is_attack: boolean;
VAR
	AlertState: {both, off, siren, strobe};
	both_a: boolean;
	off_a: boolean;
	siren_a: boolean;
	strobe_a: boolean;
	trust_AlertState_both: {untrusted, trusted};
	trust_AlertState_off: {untrusted, trusted};
	trust_AlertState_siren: {untrusted, trusted};
	trust_AlertState_strobe: {untrusted, trusted};
ASSIGN
	init(AlertState) := both;
	init(both_a) := FALSE;
	init(off_a) := FALSE;
	init(siren_a) := FALSE;
	init(strobe_a) := FALSE;
	init(trust_AlertState_both) := trusted;
	init(trust_AlertState_off) := trusted;
	init(trust_AlertState_siren) := trusted;
	init(trust_AlertState_strobe) := trusted;

MODULE main
FROZENVAR
	intensity: 0..50;
VAR
	weather: Weather;
	motiondetector: MotionDetector;
	sinaweibo: SinaWeibo;
	temperaturesensor: TemperatureSensor;
	alarm: Alarm;
	a_motion: {active, inactive};
	a_weather: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
	a_temperature: 0..100;
ASSIGN
	init(intensity) := 0 + toint(weather.is_attack) + toint(motiondetector.is_attack) + toint(sinaweibo.is_attack) + toint(temperaturesensor.is_attack) + toint(alarm.is_attack);

	next(sinaweibo.State) :=
	case
		weather.weather=rainy & sinaweibo.is_attack=FALSE: posting;
		alarm.AlertState=both & sinaweibo.is_attack=FALSE: posting;
		temperaturesensor.temperature<10 & sinaweibo.is_attack=FALSE: posting;
		motiondetector.motion=active & sinaweibo.is_attack=FALSE: posting;
		sinaweibo.State=posting: idle;
		sinaweibo.State=idle: {idle, posting};
		sinaweibo.State=posting: {posting};
		TRUE: sinaweibo.State;
	esac;

	next(alarm.AlertState) :=
	case
		motiondetector.motion=active & alarm.is_attack=FALSE: both;
		alarm.AlertState=both: {both, off, siren, strobe};
		alarm.AlertState=off: {both, off, siren, strobe};
		alarm.AlertState=siren: {both, off, siren, strobe};
		alarm.AlertState=strobe: {both, off, siren, strobe};
		TRUE: alarm.AlertState;
	esac;

	next(a_motion) :=
	case
		TRUE: {active, inactive};
	esac;

	next(a_weather) :=
	case
		TRUE: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
	esac;

	next(a_temperature) :=
	case
		a_temperature=100: {toint(a_temperature)-1, a_temperature};
		a_temperature>100: {100};
		a_temperature=0: {a_temperature, a_temperature+1};
		a_temperature<0: {0};
		TRUE: {a_temperature+-1, a_temperature, a_temperature+1};
	esac;

	weather.weather:=
	case
		weather.is_attack=TRUE: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
		TRUE: a_weather;
	esac;

	motiondetector.motion:=
	case
		motiondetector.is_attack=TRUE: {active, inactive};
		TRUE: a_motion;
	esac;

	temperaturesensor.temperature:=
	case
		temperaturesensor.is_attack=TRUE: 0..100;
		TRUE: a_temperature;
	esac;

	next(sinaweibo.post_a) :=
	case
		sinaweibo.State=idle & next(sinaweibo.State)=posting: TRUE;
		TRUE: FALSE;
	esac;

	next(alarm.both_a) :=
	case
		alarm.AlertState!=both & next(alarm.AlertState)=both: TRUE;
		TRUE: FALSE;
	esac;

	next(alarm.off_a) :=
	case
		alarm.AlertState!=off & next(alarm.AlertState)=off: TRUE;
		TRUE: FALSE;
	esac;

	next(alarm.siren_a) :=
	case
		alarm.AlertState!=siren & next(alarm.AlertState)=siren: TRUE;
		TRUE: FALSE;
	esac;

	next(alarm.strobe_a) :=
	case
		alarm.AlertState!=strobe & next(alarm.AlertState)=strobe: TRUE;
		TRUE: FALSE;
	esac;

	next(sinaweibo.trust_State_idle) :=
	case
		sinaweibo.is_attack=TRUE: untrusted;
		TRUE: sinaweibo.trust_State_idle;
	esac;

	next(sinaweibo.trust_State_posting) :=
	case
		sinaweibo.is_attack=TRUE: untrusted;
		weather.weather=rainy & (weather.trust_weather=trusted): trusted;
		weather.weather=rainy: untrusted;
		alarm.AlertState=both & (alarm.trust_AlertState_both=trusted): trusted;
		alarm.AlertState=both: untrusted;
		temperaturesensor.temperature<10 & (temperaturesensor.trust_temperature=trusted): trusted;
		temperaturesensor.temperature<10: untrusted;
		motiondetector.motion=active & (motiondetector.trust_motion=trusted): trusted;
		motiondetector.motion=active: untrusted;
		TRUE: sinaweibo.trust_State_posting;
	esac;

	next(alarm.trust_AlertState_both) :=
	case
		alarm.is_attack=TRUE: untrusted;
		motiondetector.motion=active & (motiondetector.trust_motion=trusted): trusted;
		motiondetector.motion=active: untrusted;
		TRUE: alarm.trust_AlertState_both;
	esac;

	next(alarm.trust_AlertState_off) :=
	case
		alarm.is_attack=TRUE: untrusted;
		TRUE: alarm.trust_AlertState_off;
	esac;

	next(alarm.trust_AlertState_siren) :=
	case
		alarm.is_attack=TRUE: untrusted;
		TRUE: alarm.trust_AlertState_siren;
	esac;

	next(alarm.trust_AlertState_strobe) :=
	case
		alarm.is_attack=TRUE: untrusted;
		TRUE: alarm.trust_AlertState_strobe;
	esac;

	next(sinaweibo.privacy_content) :=
	case
		TRUE: sinaweibo.privacy_content;
	esac;

SPEC AG !(sinaweibo.State=posting & sinaweibo.trust_State_posting=untrusted & intensity<=1 & sinaweibo.is_attack=FALSE);
SPEC AG !(sinaweibo.privacy_content=private & intensity<=1);
