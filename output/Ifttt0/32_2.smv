--IF Calendar.date = weekdays THEN Online Bank.transfer money
--IF Clock.time = 20 THEN Water Heater.off

MODULE WaterHeater
VAR
	MachineState: {off, on};
	on_a: boolean;
	off_a: boolean;
	waterTemperature: 0..100;
	waterTemperature_rate: -1..1;
	trust_waterTemperature: {untrusted};
	trust_MachineState_off: {untrusted, trusted};
	trust_MachineState_on: {untrusted, trusted};
ASSIGN
	init(MachineState) := on;
	init(on_a) := FALSE;
	init(off_a) := FALSE;
	init(trust_MachineState_off) := trusted;
	init(trust_MachineState_on) := trusted;

MODULE Calendar
FROZENVAR
	trust_date: {untrusted, trusted};
	trust_season: {untrusted, trusted};
VAR
	date: {weekdays, weekend, MothersDay};
	season: {spring, summer, autumn, winter};
ASSIGN
	init(trust_date):= trusted;
	init(trust_season):= trusted;

MODULE OnlineBank
VAR
	State: {idle, transfering};
	transfermoney_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_transfering: {untrusted, trusted};
ASSIGN
	init(State) := idle;
	init(transfermoney_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_transfering) := trusted;

MODULE Clock
FROZENVAR
	trust_time: {untrusted, trusted};
VAR
	time: 0..23;
ASSIGN
	init(trust_time):= trusted;

MODULE main
VAR
	waterheater: WaterHeater;
	calendar: Calendar;
	onlinebank: OnlineBank;
	clock: Clock;
	a_date: {weekdays, weekend, MothersDay};
	a_season: {spring, summer, autumn, winter};
	a_time: 0..23;
ASSIGN
	next(waterheater.MachineState) :=
	case
		clock.time=20: off;
		waterheater.MachineState=off: {off, on};
		waterheater.MachineState=on: {off, on};
		TRUE: waterheater.MachineState;
	esac;

	next(onlinebank.State) :=
	case
		calendar.date=weekdays: transfering;
		onlinebank.State=transfering: idle;
		onlinebank.State=idle: {idle, transfering};
		onlinebank.State=transfering: {transfering};
		TRUE: onlinebank.State;
	esac;

	next(a_date) :=
	case
		TRUE: {weekdays, weekend, MothersDay};
	esac;

	next(a_season) :=
	case
		TRUE: {spring, summer, autumn, winter};
	esac;

	next(a_time) :=
	case
		a_time=23: 0;
		a_time>=23: 23;
		TRUE: a_time+1;
	esac;

	next(waterheater.waterTemperature) :=
	case
		waterheater.waterTemperature=100-(waterheater.waterTemperature_rate): {toint(waterheater.waterTemperature)-1+waterheater.waterTemperature_rate, waterheater.waterTemperature+waterheater.waterTemperature_rate};
		waterheater.waterTemperature>100-(waterheater.waterTemperature_rate): {100};
		waterheater.waterTemperature=0-(waterheater.waterTemperature_rate): {waterheater.waterTemperature+waterheater.waterTemperature_rate, waterheater.waterTemperature+1+waterheater.waterTemperature_rate};
		waterheater.waterTemperature<0-(waterheater.waterTemperature_rate): {0};
		TRUE: {waterheater.waterTemperature+-1+waterheater.waterTemperature_rate, waterheater.waterTemperature+waterheater.waterTemperature_rate, waterheater.waterTemperature+1+waterheater.waterTemperature_rate};
	esac;

	calendar.date := a_date;

	calendar.season := a_season;

	clock.time := a_time;

	next(waterheater.waterTemperature_rate) :=
	case
		waterheater.MachineState=on: 1;
		TRUE: 0;
	esac;

	next(waterheater.on_a) :=
	case
		waterheater.MachineState!=on & next(waterheater.MachineState)=on: TRUE;
		TRUE: FALSE;
	esac;

	next(waterheater.off_a) :=
	case
		waterheater.MachineState!=off & next(waterheater.MachineState)=off: TRUE;
		TRUE: FALSE;
	esac;

	next(onlinebank.transfermoney_a) :=
	case
		onlinebank.State=idle & next(onlinebank.State)=transfering: TRUE;
		TRUE: FALSE;
	esac;

	next(waterheater.trust_MachineState_off) :=
	case
		clock.time=20 & (clock.trust_time=trusted): trusted;
		clock.time=20: untrusted;
		TRUE: waterheater.trust_MachineState_off;
	esac;

	next(waterheater.trust_MachineState_on) :=
	case
		TRUE: waterheater.trust_MachineState_on;
	esac;

	next(onlinebank.trust_State_idle) :=
	case
		TRUE: onlinebank.trust_State_idle;
	esac;

	next(onlinebank.trust_State_transfering) :=
	case
		calendar.date=weekdays & (calendar.trust_date=trusted): trusted;
		calendar.date=weekdays: untrusted;
		TRUE: onlinebank.trust_State_transfering;
	esac;

SPEC AG !(waterheater.MachineState=on & waterheater.trust_MachineState_on=untrusted);
SPEC AG !(onlinebank.State=transfering & onlinebank.trust_State_transfering=untrusted);
