--IF Sina Weibo.State = posting THEN Sina Weibo.post
--IF Weather.weather = rainy THEN Sina Weibo.post
--IF Refrigerator Door Sensor.contact = open THEN Sina Weibo.post

MODULE Weather
FROZENVAR
	trust_weather: {untrusted, trusted};
VAR
	weather: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
ASSIGN
	init(trust_weather):= untrusted;

MODULE SinaWeibo
VAR
	State: {idle, posting};
	post_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_posting: {untrusted, trusted};
	privacy_content: {private, public};
ASSIGN
	init(State) := idle;
	init(post_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_posting) := trusted;
	init(privacy_content) := public;

MODULE RefrigeratorDoorSensor
FROZENVAR
	trust_contact: {untrusted, trusted};
VAR
	contact: {closed, open};
ASSIGN
	init(trust_contact):= untrusted;

MODULE main
VAR
	weather: Weather;
	sinaweibo: SinaWeibo;
	refrigeratordoorsensor: RefrigeratorDoorSensor;
	a_weather: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
ASSIGN
	next(sinaweibo.State) :=
	case
		sinaweibo.State=posting: posting;
		weather.weather=rainy: posting;
		refrigeratordoorsensor.contact=open: posting;
		sinaweibo.State=posting: idle;
		sinaweibo.State=idle: {idle, posting};
		sinaweibo.State=posting: {posting};
		TRUE: sinaweibo.State;
	esac;

	next(a_weather) :=
	case
		TRUE: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
	esac;

	weather.weather := a_weather;

	next(refrigeratordoorsensor.contact) :=
	case
		TRUE: {closed, open};
	esac;

	next(sinaweibo.post_a) :=
	case
		sinaweibo.State=idle & next(sinaweibo.State)=posting: TRUE;
		TRUE: FALSE;
	esac;

	next(sinaweibo.trust_State_idle) :=
	case
		TRUE: sinaweibo.trust_State_idle;
	esac;

	next(sinaweibo.trust_State_posting) :=
	case
		sinaweibo.State=posting & (sinaweibo.trust_State_posting=trusted): trusted;
		sinaweibo.State=posting: untrusted;
		weather.weather=rainy & (weather.trust_weather=trusted): trusted;
		weather.weather=rainy: untrusted;
		refrigeratordoorsensor.contact=open & (refrigeratordoorsensor.trust_contact=trusted): trusted;
		refrigeratordoorsensor.contact=open: untrusted;
		TRUE: sinaweibo.trust_State_posting;
	esac;

	next(sinaweibo.privacy_content) :=
	case
		TRUE: sinaweibo.privacy_content;
	esac;

SPEC AG !(sinaweibo.State=posting & sinaweibo.trust_State_posting=untrusted);
SPEC AG !(sinaweibo.privacy_content=private);
