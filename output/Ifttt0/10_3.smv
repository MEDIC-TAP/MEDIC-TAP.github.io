--IF Email.receiveMail = receive THEN Sina Weibo.post
--IF Motion Detector.motion = inactive THEN Email.send mail
--IF Motion Detector.motion = active THEN Sina Weibo.post
--IF Washer Machine.MachineState = stop THEN Email.send mail
--IF Door.LockState = locked THEN Email.send mail
--IF Smoke Sensor.smoke = detected THEN Email.send mail
--IF Home Mode.Mode = away THEN Sina Weibo.post
--IF Car.location = garage THEN Email.send mail
--IF Clock.time = 20 THEN Email.send mail
--IF Calendar.date = weekdays THEN Email.send mail
--IF Clock.time = 19 THEN Sina Weibo.post
--IF Email.receiveMail = receive THEN Email.send mail
--IF Motion Detector.motion = active THEN Email.send mail

MODULE MotionDetector
FROZENVAR
	trust_motion: {untrusted, trusted};
VAR
	motion: {active, inactive};
ASSIGN
	init(trust_motion):= trusted;

MODULE SinaWeibo
VAR
	State: {idle, posting};
	post_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_posting: {untrusted, trusted};
	privacy_content: {private, public};
ASSIGN
	init(State) := idle;
	init(post_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_posting) := trusted;
	init(privacy_content) := public;

MODULE Email
VAR
	State: {idle, sending};
	sendmail_a: boolean;
	receiveKey: {Key, others};
	receiveMail: {idle, receive};
	trust_receiveKey: {trusted};
	trust_receiveMail: {trusted};
	trust_State_idle: {untrusted, trusted};
	trust_State_sending: {untrusted, trusted};
ASSIGN
	init(State) := idle;
	init(sendmail_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_sending) := trusted;

MODULE SmokeSensor
FROZENVAR
	trust_smoke: {untrusted, trusted};
VAR
	smoke: {clear, detected, tested};
ASSIGN
	init(trust_smoke):= untrusted;

MODULE Car
FROZENVAR
	trust_location: {untrusted, trusted};
VAR
	location: {garage, away};
ASSIGN
	init(trust_location):= trusted;

MODULE Calendar
FROZENVAR
	trust_date: {untrusted, trusted};
	trust_season: {untrusted, trusted};
VAR
	date: {weekdays, weekend, MothersDay};
	season: {spring, summer, autumn, winter};
ASSIGN
	init(trust_date):= trusted;
	init(trust_season):= trusted;

MODULE Clock
FROZENVAR
	trust_time: {untrusted, trusted};
VAR
	time: 0..23;
ASSIGN
	init(trust_time):= trusted;

MODULE HomeMode
VAR
	Mode: {away, home, sleep};
	State: {idle, sendingAlertMessage, sendingPhoto};
	sethomemode_a: boolean;
	setawaymode_a: boolean;
	setsleepmode_a: boolean;
	sendalertmessage_a: boolean;
	sendphoto_a: boolean;
	trust_Mode_away: {untrusted, trusted};
	trust_Mode_home: {untrusted, trusted};
	trust_Mode_sleep: {untrusted, trusted};
	trust_State_idle: {untrusted, trusted};
	trust_State_sendingAlertMessage: {untrusted, trusted};
	trust_State_sendingPhoto: {untrusted, trusted};
ASSIGN
	init(Mode) := home;
	init(State) := idle;
	init(sethomemode_a) := FALSE;
	init(setawaymode_a) := FALSE;
	init(setsleepmode_a) := FALSE;
	init(sendalertmessage_a) := FALSE;
	init(sendphoto_a) := FALSE;
	init(trust_Mode_home) := trusted;
	init(trust_State_idle) := trusted;
	init(trust_State_sendingAlertMessage) := trusted;
	init(trust_State_sendingPhoto) := trusted;
	init(trust_Mode_away) := trusted;
	init(trust_Mode_sleep) := trusted;

MODULE WasherMachine
VAR
	WasherMode: {heavy, regular, rinse, spinDry};
	MachineState: {pause, run, stop};
	regular_a: boolean;
	heavy_a: boolean;
	rinse_a: boolean;
	spinDry_a: boolean;
	pause_a: boolean;
	run_a: boolean;
	stop_a: boolean;
	washerJobState: {airWash, cooling, delayWash, drying, finish, none, preWash, rinse, spin, wash, weightSensing, wrinklePrevent};
	trust_washerJobState: {untrusted};
	trust_WasherMode_heavy: {untrusted, trusted};
	trust_WasherMode_regular: {untrusted, trusted};
	trust_WasherMode_rinse: {untrusted, trusted};
	trust_WasherMode_spinDry: {untrusted, trusted};
	trust_MachineState_pause: {untrusted, trusted};
	trust_MachineState_run: {untrusted, trusted};
	trust_MachineState_stop: {untrusted, trusted};
ASSIGN
	init(WasherMode) := regular;
	init(MachineState) := pause;
	init(regular_a) := FALSE;
	init(heavy_a) := FALSE;
	init(rinse_a) := FALSE;
	init(spinDry_a) := FALSE;
	init(pause_a) := FALSE;
	init(run_a) := FALSE;
	init(stop_a) := FALSE;
	init(trust_WasherMode_regular) := trusted;
	init(trust_MachineState_pause) := trusted;
	init(trust_MachineState_run) := trusted;
	init(trust_MachineState_stop) := trusted;
	init(trust_WasherMode_heavy) := trusted;
	init(trust_WasherMode_rinse) := trusted;
	init(trust_WasherMode_spinDry) := trusted;

MODULE Door
VAR
	LockState: {locked, unlocked};
	lock_a: boolean;
	unlock_a: boolean;
	trust_LockState_locked: {untrusted, trusted};
	trust_LockState_unlocked: {untrusted, trusted};
ASSIGN
	init(LockState) := locked;
	init(lock_a) := FALSE;
	init(unlock_a) := FALSE;
	init(trust_LockState_locked) := trusted;
	init(trust_LockState_unlocked) := trusted;

MODULE main
VAR
	motiondetector: MotionDetector;
	sinaweibo: SinaWeibo;
	email: Email;
	smokesensor: SmokeSensor;
	car: Car;
	calendar: Calendar;
	clock: Clock;
	homemode: HomeMode;
	washermachine: WasherMachine;
	door: Door;
	a_date: {weekdays, weekend, MothersDay};
	a_motion: {active, inactive};
	a_smoke: {clear, detected, tested};
	a_season: {spring, summer, autumn, winter};
	a_time: 0..23;
ASSIGN
	next(sinaweibo.State) :=
	case
		email.receiveMail=receive: posting;
		motiondetector.motion=active: posting;
		homemode.Mode=away: posting;
		clock.time=19: posting;
		sinaweibo.State=posting: idle;
		sinaweibo.State=idle: {idle, posting};
		sinaweibo.State=posting: {posting};
		TRUE: sinaweibo.State;
	esac;

	next(email.State) :=
	case
		motiondetector.motion=inactive: sending;
		washermachine.MachineState=stop: sending;
		door.LockState=locked: sending;
		smokesensor.smoke=detected: sending;
		car.location=garage: sending;
		clock.time=20: sending;
		calendar.date=weekdays: sending;
		email.receiveMail=receive: sending;
		motiondetector.motion=active: sending;
		email.State=sending: idle;
		email.State=idle: {idle, sending};
		email.State=sending: {sending};
		TRUE: email.State;
	esac;

	next(homemode.Mode) :=
	case
		homemode.Mode=away: {away, home, sleep};
		homemode.Mode=home: {away, home, sleep};
		homemode.Mode=sleep: {away, home, sleep};
		TRUE: homemode.Mode;
	esac;

	next(homemode.State) :=
	case
		homemode.State=sendingAlertMessage: idle;
		homemode.State=sendingPhoto: idle;
		homemode.State=idle: {idle, sendingAlertMessage, sendingPhoto};
		homemode.State=sendingAlertMessage: {sendingAlertMessage, sendingPhoto};
		homemode.State=sendingPhoto: {sendingAlertMessage, sendingPhoto};
		TRUE: homemode.State;
	esac;

	next(washermachine.WasherMode) :=
	case
		washermachine.WasherMode=heavy: {heavy, regular, rinse, spinDry};
		washermachine.WasherMode=regular: {heavy, regular, rinse, spinDry};
		washermachine.WasherMode=rinse: {heavy, regular, rinse, spinDry};
		washermachine.WasherMode=spinDry: {heavy, regular, rinse, spinDry};
		TRUE: washermachine.WasherMode;
	esac;

	next(washermachine.MachineState) :=
	case
		washermachine.MachineState=pause: {pause, run, stop};
		washermachine.MachineState=run: {pause, run, stop};
		washermachine.MachineState=stop: {pause, run, stop};
		TRUE: washermachine.MachineState;
	esac;

	next(door.LockState) :=
	case
		door.LockState=locked: {locked, unlocked};
		door.LockState=unlocked: {locked, unlocked};
		TRUE: door.LockState;
	esac;

	next(a_date) :=
	case
		TRUE: {weekdays, weekend, MothersDay};
	esac;

	next(a_motion) :=
	case
		TRUE: {active, inactive};
	esac;

	next(a_smoke) :=
	case
		TRUE: {clear, detected, tested};
	esac;

	next(a_season) :=
	case
		TRUE: {spring, summer, autumn, winter};
	esac;

	next(a_time) :=
	case
		a_time=23: 0;
		a_time>=23: 23;
		TRUE: a_time+1;
	esac;

	motiondetector.motion := a_motion;

	next(email.receiveKey) :=
	case
		TRUE: {Key, others};
	esac;

	next(email.receiveMail) :=
	case
		TRUE: {idle, receive};
	esac;

	smokesensor.smoke := a_smoke;

	next(car.location) :=
	case
		TRUE: {garage, away};
	esac;

	calendar.date := a_date;

	calendar.season := a_season;

	clock.time := a_time;

	next(washermachine.washerJobState) :=
	case
		TRUE: {airWash, cooling, delayWash, drying, finish, none, preWash, rinse, spin, wash, weightSensing, wrinklePrevent};
	esac;

	next(sinaweibo.post_a) :=
	case
		sinaweibo.State=idle & next(sinaweibo.State)=posting: TRUE;
		TRUE: FALSE;
	esac;

	next(email.sendmail_a) :=
	case
		email.State=idle & next(email.State)=sending: TRUE;
		TRUE: FALSE;
	esac;

	next(homemode.sethomemode_a) :=
	case
		homemode.Mode!=home & next(homemode.Mode)=home: TRUE;
		TRUE: FALSE;
	esac;

	next(homemode.setawaymode_a) :=
	case
		homemode.Mode!=away & next(homemode.Mode)=away: TRUE;
		TRUE: FALSE;
	esac;

	next(homemode.setsleepmode_a) :=
	case
		homemode.Mode!=sleep & next(homemode.Mode)=sleep: TRUE;
		TRUE: FALSE;
	esac;

	next(homemode.sendalertmessage_a) :=
	case
		homemode.State!=sendingAlertMessage & next(homemode.State)=sendingAlertMessage: TRUE;
		TRUE: FALSE;
	esac;

	next(homemode.sendphoto_a) :=
	case
		homemode.State!=sendingPhoto & next(homemode.State)=sendingPhoto: TRUE;
		TRUE: FALSE;
	esac;

	next(washermachine.regular_a) :=
	case
		washermachine.WasherMode!=regular & next(washermachine.WasherMode)=regular: TRUE;
		TRUE: FALSE;
	esac;

	next(washermachine.heavy_a) :=
	case
		washermachine.WasherMode!=heavy & next(washermachine.WasherMode)=heavy: TRUE;
		TRUE: FALSE;
	esac;

	next(washermachine.rinse_a) :=
	case
		washermachine.WasherMode!=rinse & next(washermachine.WasherMode)=rinse: TRUE;
		TRUE: FALSE;
	esac;

	next(washermachine.spinDry_a) :=
	case
		washermachine.WasherMode!=spinDry & next(washermachine.WasherMode)=spinDry: TRUE;
		TRUE: FALSE;
	esac;

	next(washermachine.pause_a) :=
	case
		washermachine.MachineState!=pause & next(washermachine.MachineState)=pause: TRUE;
		TRUE: FALSE;
	esac;

	next(washermachine.run_a) :=
	case
		washermachine.MachineState!=run & next(washermachine.MachineState)=run: TRUE;
		TRUE: FALSE;
	esac;

	next(washermachine.stop_a) :=
	case
		washermachine.MachineState!=stop & next(washermachine.MachineState)=stop: TRUE;
		TRUE: FALSE;
	esac;

	next(door.lock_a) :=
	case
		door.LockState!=locked & next(door.LockState)=locked: TRUE;
		TRUE: FALSE;
	esac;

	next(door.unlock_a) :=
	case
		door.LockState!=unlocked & next(door.LockState)=unlocked: TRUE;
		TRUE: FALSE;
	esac;

	next(sinaweibo.trust_State_idle) :=
	case
		TRUE: sinaweibo.trust_State_idle;
	esac;

	next(sinaweibo.trust_State_posting) :=
	case
		email.receiveMail=receive & (email.trust_receiveMail=trusted): trusted;
		email.receiveMail=receive: untrusted;
		motiondetector.motion=active & (motiondetector.trust_motion=trusted): trusted;
		motiondetector.motion=active: untrusted;
		homemode.Mode=away & (homemode.trust_Mode_away=trusted): trusted;
		homemode.Mode=away: untrusted;
		clock.time=19 & (clock.trust_time=trusted): trusted;
		clock.time=19: untrusted;
		TRUE: sinaweibo.trust_State_posting;
	esac;

	next(email.trust_State_idle) :=
	case
		TRUE: email.trust_State_idle;
	esac;

	next(email.trust_State_sending) :=
	case
		motiondetector.motion=inactive & (motiondetector.trust_motion=trusted): trusted;
		motiondetector.motion=inactive: untrusted;
		washermachine.MachineState=stop & (washermachine.trust_MachineState_stop=trusted): trusted;
		washermachine.MachineState=stop: untrusted;
		door.LockState=locked & (door.trust_LockState_locked=trusted): trusted;
		door.LockState=locked: untrusted;
		smokesensor.smoke=detected & (smokesensor.trust_smoke=trusted): trusted;
		smokesensor.smoke=detected: untrusted;
		car.location=garage & (car.trust_location=trusted): trusted;
		car.location=garage: untrusted;
		clock.time=20 & (clock.trust_time=trusted): trusted;
		clock.time=20: untrusted;
		calendar.date=weekdays & (calendar.trust_date=trusted): trusted;
		calendar.date=weekdays: untrusted;
		email.receiveMail=receive & (email.trust_receiveMail=trusted): trusted;
		email.receiveMail=receive: untrusted;
		motiondetector.motion=active & (motiondetector.trust_motion=trusted): trusted;
		motiondetector.motion=active: untrusted;
		TRUE: email.trust_State_sending;
	esac;

	next(homemode.trust_Mode_away) := homemode.trust_Mode_away;

	next(homemode.trust_Mode_home) := homemode.trust_Mode_home;

	next(homemode.trust_Mode_sleep) := homemode.trust_Mode_sleep;

	next(homemode.trust_State_idle) := homemode.trust_State_idle;

	next(homemode.trust_State_sendingAlertMessage) := homemode.trust_State_sendingAlertMessage;

	next(homemode.trust_State_sendingPhoto) := homemode.trust_State_sendingPhoto;

	next(washermachine.trust_WasherMode_heavy) := washermachine.trust_WasherMode_heavy;

	next(washermachine.trust_WasherMode_regular) := washermachine.trust_WasherMode_regular;

	next(washermachine.trust_WasherMode_rinse) := washermachine.trust_WasherMode_rinse;

	next(washermachine.trust_WasherMode_spinDry) := washermachine.trust_WasherMode_spinDry;

	next(washermachine.trust_MachineState_pause) := washermachine.trust_MachineState_pause;

	next(washermachine.trust_MachineState_run) := washermachine.trust_MachineState_run;

	next(washermachine.trust_MachineState_stop) := washermachine.trust_MachineState_stop;

	next(door.trust_LockState_locked) := door.trust_LockState_locked;

	next(door.trust_LockState_unlocked) := door.trust_LockState_unlocked;

	next(sinaweibo.privacy_content) :=
	case
		TRUE: sinaweibo.privacy_content;
	esac;

SPEC AG !(sinaweibo.State=posting & sinaweibo.trust_State_posting=untrusted);
SPEC AG !(sinaweibo.privacy_content=private);
