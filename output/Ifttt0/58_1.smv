--IF Mobile Phone.location = home THEN Garage Door.open
--IF Motion Detector.motion = active THEN Garage Door.open

MODULE MotionDetector
FROZENVAR
	trust_motion: {untrusted, trusted};
VAR
	motion: {active, inactive};
ASSIGN
	init(trust_motion):= trusted;

MODULE GarageDoor
VAR
	DoorState: {closed, open};
	close_a: boolean;
	open_a: boolean;
	contact: {closed, open};
	trust_contact: {trusted};
	trust_DoorState_closed: {untrusted, trusted};
	trust_DoorState_open: {untrusted, trusted};
ASSIGN
	init(DoorState) := closed;
	init(close_a) := FALSE;
	init(open_a) := FALSE;
	init(trust_DoorState_closed) := trusted;
	init(trust_DoorState_open) := trusted;

MODULE MobilePhone
VAR
	State: {on, takingphoto, uploadingtocloud};
	takephoto_a: boolean;
	uploadtocloud_a: boolean;
	location: {home, away, garageDoor, Shanghai};
	steps: 0..100;
	trust_location: {trusted};
	trust_steps: {trusted};
	trust_State_on: {untrusted, trusted};
	trust_State_takingphoto: {untrusted, trusted};
	trust_State_uploadingtocloud: {untrusted, trusted};
	privacy_photo: {private};
	privacy_steps: {public};
	privacy_location: {public};
ASSIGN
	init(State) := on;
	init(takephoto_a) := FALSE;
	init(uploadtocloud_a) := FALSE;
	init(trust_State_on) := trusted;
	init(trust_State_takingphoto) := trusted;
	init(trust_State_uploadingtocloud) := trusted;

MODULE main
VAR
	motiondetector: MotionDetector;
	garagedoor: GarageDoor;
	mobilephone: MobilePhone;
	a_motion: {active, inactive};
ASSIGN
	next(garagedoor.DoorState) :=
	case
		mobilephone.location=home: open;
		motiondetector.motion=active: open;
		garagedoor.DoorState=closed: {closed, open};
		garagedoor.DoorState=open: {closed, open};
		TRUE: garagedoor.DoorState;
	esac;

	next(mobilephone.State) :=
	case
		mobilephone.State=takingphoto: on;
		mobilephone.State=uploadingtocloud: on;
		mobilephone.State=on: {on, takingphoto, uploadingtocloud};
		mobilephone.State=takingphoto: {takingphoto};
		mobilephone.State=uploadingtocloud: {uploadingtocloud};
		TRUE: mobilephone.State;
	esac;

	next(a_motion) :=
	case
		TRUE: {active, inactive};
	esac;

	motiondetector.motion := a_motion;

	next(garagedoor.contact) :=
	case
		garagedoor.DoorState=closed: closed;
		garagedoor.DoorState=open: open;
		TRUE: garagedoor.contact;
	esac;

	next(mobilephone.location) :=
	case
		TRUE: {home, away, garageDoor, Shanghai};
	esac;

	next(mobilephone.steps) :=
	case
		mobilephone.steps>=100: {100};
		mobilephone.steps=0: {mobilephone.steps, mobilephone.steps+1};
		mobilephone.steps<0: {0};
		TRUE: {mobilephone.steps, mobilephone.steps+1};
	esac;

	next(garagedoor.close_a) :=
	case
		garagedoor.DoorState!=closed & next(garagedoor.DoorState)=closed: TRUE;
		TRUE: FALSE;
	esac;

	next(garagedoor.open_a) :=
	case
		garagedoor.DoorState!=open & next(garagedoor.DoorState)=open: TRUE;
		TRUE: FALSE;
	esac;

	next(mobilephone.takephoto_a) :=
	case
		mobilephone.State=on & next(mobilephone.State)=takingphoto: TRUE;
		TRUE: FALSE;
	esac;

	next(mobilephone.uploadtocloud_a) :=
	case
		mobilephone.State=on & next(mobilephone.State)=uploadingtocloud: TRUE;
		TRUE: FALSE;
	esac;

	next(garagedoor.trust_DoorState_closed) :=
	case
		TRUE: garagedoor.trust_DoorState_closed;
	esac;

	next(garagedoor.trust_DoorState_open) :=
	case
		mobilephone.location=home & (mobilephone.trust_location=trusted): trusted;
		mobilephone.location=home: untrusted;
		motiondetector.motion=active & (motiondetector.trust_motion=trusted): trusted;
		motiondetector.motion=active: untrusted;
		TRUE: garagedoor.trust_DoorState_open;
	esac;

	next(mobilephone.trust_State_on) := mobilephone.trust_State_on;

	next(mobilephone.trust_State_takingphoto) := mobilephone.trust_State_takingphoto;

	next(mobilephone.trust_State_uploadingtocloud) := mobilephone.trust_State_uploadingtocloud;

SPEC AG !(garagedoor.DoorState=open & garagedoor.trust_DoorState_open=untrusted);
