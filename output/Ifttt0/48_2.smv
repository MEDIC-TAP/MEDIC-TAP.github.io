--IF Humidity Sensor.humidity > 60 THEN Online Bank.transfer money

MODULE HumiditySensor
FROZENVAR
	trust_humidity: {untrusted, trusted};
VAR
	humidity: 0..100;
ASSIGN
	init(trust_humidity):= untrusted;

MODULE OnlineBank
VAR
	State: {idle, transfering};
	transfermoney_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_transfering: {untrusted, trusted};
ASSIGN
	init(State) := idle;
	init(transfermoney_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_transfering) := trusted;

MODULE main
VAR
	humiditysensor: HumiditySensor;
	onlinebank: OnlineBank;
	a_humidity: 0..100;
ASSIGN
	next(onlinebank.State) :=
	case
		humiditysensor.humidity>60: transfering;
		onlinebank.State=transfering: idle;
		onlinebank.State=idle: {idle, transfering};
		onlinebank.State=transfering: {transfering};
		TRUE: onlinebank.State;
	esac;

	next(a_humidity) :=
	case
		a_humidity=100: {toint(a_humidity)-1, a_humidity};
		a_humidity>100: {100};
		a_humidity=0: {a_humidity, a_humidity+1};
		a_humidity<0: {0};
		TRUE: {a_humidity+-1, a_humidity, a_humidity+1};
	esac;

	humiditysensor.humidity := a_humidity;

	next(onlinebank.transfermoney_a) :=
	case
		onlinebank.State=idle & next(onlinebank.State)=transfering: TRUE;
		TRUE: FALSE;
	esac;

	next(onlinebank.trust_State_idle) :=
	case
		TRUE: onlinebank.trust_State_idle;
	esac;

	next(onlinebank.trust_State_transfering) :=
	case
		humiditysensor.humidity>60 & (humiditysensor.trust_humidity=trusted): trusted;
		humiditysensor.humidity>60: untrusted;
		TRUE: onlinebank.trust_State_transfering;
	esac;

SPEC AG !(onlinebank.State=transfering & onlinebank.trust_State_transfering=untrusted);
