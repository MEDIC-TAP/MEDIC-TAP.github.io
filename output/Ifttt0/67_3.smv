--IF Calendar.date = weekdays THEN Sina Weibo.post
--IF Motion Detector.motion = active THEN Sina Weibo.post
--IF Motion Detector.motion = inactive THEN Sina Weibo.post
--IF Sina Weibo_1.State = posting THEN Sina Weibo.post

MODULE MotionDetector
FROZENVAR
	trust_motion: {untrusted, trusted};
VAR
	motion: {active, inactive};
ASSIGN
	init(trust_motion):= trusted;

MODULE SinaWeibo
VAR
	State: {idle, posting};
	post_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_posting: {untrusted, trusted};
	privacy_content: {private, public};
ASSIGN
	init(State) := idle;
	init(post_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_posting) := trusted;
	init(privacy_content) := public;

MODULE SinaWeibo_1
VAR
	State: {idle, posting};
	post_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_posting: {untrusted, trusted};
	privacy_content: {private, public};
ASSIGN
	init(State) := idle;
	init(post_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_posting) := trusted;
	init(privacy_content) := public;

MODULE Calendar
FROZENVAR
	trust_date: {untrusted, trusted};
	trust_season: {untrusted, trusted};
VAR
	date: {weekdays, weekend, MothersDay};
	season: {spring, summer, autumn, winter};
ASSIGN
	init(trust_date):= trusted;
	init(trust_season):= trusted;

MODULE main
VAR
	motiondetector: MotionDetector;
	sinaweibo: SinaWeibo;
	sinaweibo_1: SinaWeibo_1;
	calendar: Calendar;
	a_date: {weekdays, weekend, MothersDay};
	a_motion: {active, inactive};
	a_season: {spring, summer, autumn, winter};
ASSIGN
	next(sinaweibo.State) :=
	case
		calendar.date=weekdays: posting;
		motiondetector.motion=active: posting;
		motiondetector.motion=inactive: posting;
		sinaweibo_1.State=posting: posting;
		sinaweibo.State=posting: idle;
		sinaweibo.State=idle: {idle, posting};
		sinaweibo.State=posting: {posting};
		TRUE: sinaweibo.State;
	esac;

	next(sinaweibo_1.State) :=
	case
		sinaweibo_1.State=posting: idle;
		sinaweibo_1.State=idle: {idle, posting};
		sinaweibo_1.State=posting: {posting};
		TRUE: sinaweibo_1.State;
	esac;

	next(a_date) :=
	case
		TRUE: {weekdays, weekend, MothersDay};
	esac;

	next(a_motion) :=
	case
		TRUE: {active, inactive};
	esac;

	next(a_season) :=
	case
		TRUE: {spring, summer, autumn, winter};
	esac;

	motiondetector.motion := a_motion;

	calendar.date := a_date;

	calendar.season := a_season;

	next(sinaweibo.post_a) :=
	case
		sinaweibo.State=idle & next(sinaweibo.State)=posting: TRUE;
		TRUE: FALSE;
	esac;

	next(sinaweibo_1.post_a) :=
	case
		sinaweibo_1.State=idle & next(sinaweibo_1.State)=posting: TRUE;
		TRUE: FALSE;
	esac;

	next(sinaweibo.trust_State_idle) :=
	case
		TRUE: sinaweibo.trust_State_idle;
	esac;

	next(sinaweibo.trust_State_posting) :=
	case
		calendar.date=weekdays & (calendar.trust_date=trusted): trusted;
		calendar.date=weekdays: untrusted;
		motiondetector.motion=active & (motiondetector.trust_motion=trusted): trusted;
		motiondetector.motion=active: untrusted;
		motiondetector.motion=inactive & (motiondetector.trust_motion=trusted): trusted;
		motiondetector.motion=inactive: untrusted;
		sinaweibo_1.State=posting & (sinaweibo_1.trust_State_posting=trusted): trusted;
		sinaweibo_1.State=posting: untrusted;
		TRUE: sinaweibo.trust_State_posting;
	esac;

	next(sinaweibo_1.trust_State_idle) := sinaweibo_1.trust_State_idle;

	next(sinaweibo_1.trust_State_posting) := sinaweibo_1.trust_State_posting;

	next(sinaweibo.privacy_content) :=
	case
		TRUE: sinaweibo.privacy_content;
	esac;

	next(sinaweibo_1.privacy_content) := sinaweibo_1.privacy_content;

SPEC AG !(sinaweibo.State=posting & sinaweibo.trust_State_posting=untrusted);
SPEC AG !(sinaweibo.privacy_content=private);
SPEC AG !(sinaweibo_1.State=posting & sinaweibo_1.trust_State_posting=untrusted);
SPEC AG !(sinaweibo_1.privacy_content=private);
