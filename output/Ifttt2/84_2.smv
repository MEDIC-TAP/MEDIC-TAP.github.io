--IF Temperature Sensor.temperature < 10 THEN Sina Weibo.post
--IF Air Quality Monitor.carbonDioxide > 70 THEN Sina Weibo.post
--IF Clock.time = 6 THEN Sina Weibo.post
--IF Clock.time = 6 THEN Air Conditioner.auto
--IF Clock.time = 20 THEN Sina Weibo.post
--IF Clock.time = 20 THEN Water Heater.off
--IF Calendar.date = weekend THEN Air Conditioner.off
--IF Sina Weibo.State = posting THEN Air Conditioner.off
--IF Clock.time = 20 THEN Water Heater.on
--IF Sina Weibo_1.State = posting THEN Sina Weibo.post

MODULE TemperatureSensor
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_temperature: {untrusted, trusted};
VAR
	temperature: 0..100;
ASSIGN
	init(trust_temperature):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE SinaWeibo
FROZENVAR
	is_attack: boolean;
VAR
	State: {idle, posting};
	post_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_posting: {untrusted, trusted};
	privacy_content: {private, public};
ASSIGN
	init(State) := idle;
	init(post_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_posting) := trusted;
	init(privacy_content) := public;

MODULE WaterHeater
FROZENVAR
	is_attack: boolean;
VAR
	MachineState: {off, on};
	on_a: boolean;
	off_a: boolean;
	waterTemperature: 0..100;
	waterTemperature_rate: -1..1;
	trust_waterTemperature: {untrusted};
	trust_MachineState_off: {untrusted, trusted};
	trust_MachineState_on: {untrusted, trusted};
ASSIGN
	init(MachineState) := on;
	init(on_a) := FALSE;
	init(off_a) := FALSE;
	init(trust_MachineState_off) := trusted;
	init(trust_MachineState_on) := trusted;

MODULE AirQualityMonitor
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_airQuality: {untrusted, trusted};
	trust_carbonDioxide: {untrusted, trusted};
VAR
	airQuality: 0..100;
	carbonDioxide: 0..100;
ASSIGN
	init(trust_airQuality):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;
	init(trust_carbonDioxide):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE AirConditioner
FROZENVAR
	is_attack: boolean;
VAR
	HvacMode: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
	auto_a: boolean;
	cool_a: boolean;
	dry_a: boolean;
	coolClean_a: boolean;
	dryClean_a: boolean;
	fanOnly_a: boolean;
	heat_a: boolean;
	heatClean_a: boolean;
	off_a: boolean;
	temperature_rate: -1..1;
	humidity_rate: -1..1;
	trust_HvacMode_auto: {untrusted, trusted};
	trust_HvacMode_cool: {untrusted, trusted};
	trust_HvacMode_coolClean: {untrusted, trusted};
	trust_HvacMode_dry: {untrusted, trusted};
	trust_HvacMode_dryClean: {untrusted, trusted};
	trust_HvacMode_fanOnly: {untrusted, trusted};
	trust_HvacMode_heat: {untrusted, trusted};
	trust_HvacMode_heatClean: {untrusted, trusted};
	trust_HvacMode_off: {untrusted, trusted};
ASSIGN
	init(HvacMode) := auto;
	init(auto_a) := FALSE;
	init(cool_a) := FALSE;
	init(dry_a) := FALSE;
	init(coolClean_a) := FALSE;
	init(dryClean_a) := FALSE;
	init(fanOnly_a) := FALSE;
	init(heat_a) := FALSE;
	init(heatClean_a) := FALSE;
	init(off_a) := FALSE;
	init(trust_HvacMode_auto) := trusted;
	init(trust_HvacMode_cool) := trusted;
	init(trust_HvacMode_dry) := trusted;
	init(trust_HvacMode_coolClean) := trusted;
	init(trust_HvacMode_dryClean) := trusted;
	init(trust_HvacMode_fanOnly) := trusted;
	init(trust_HvacMode_heat) := trusted;
	init(trust_HvacMode_heatClean) := trusted;
	init(trust_HvacMode_off) := trusted;

MODULE SinaWeibo_1
FROZENVAR
	is_attack: boolean;
VAR
	State: {idle, posting};
	post_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_posting: {untrusted, trusted};
	privacy_content: {private, public};
ASSIGN
	init(State) := idle;
	init(post_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_posting) := trusted;
	init(privacy_content) := public;

MODULE Calendar
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_date: {untrusted, trusted};
	trust_season: {untrusted, trusted};
VAR
	date: {weekdays, weekend, MothersDay};
	season: {spring, summer, autumn, winter};
ASSIGN
	init(trust_date):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;
	init(trust_season):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE Clock
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_time: {untrusted, trusted};
VAR
	time: 0..23;
ASSIGN
	init(trust_time):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE main
FROZENVAR
	intensity: 0..50;
VAR
	temperaturesensor: TemperatureSensor;
	sinaweibo: SinaWeibo;
	waterheater: WaterHeater;
	airqualitymonitor: AirQualityMonitor;
	airconditioner: AirConditioner;
	sinaweibo_1: SinaWeibo_1;
	calendar: Calendar;
	clock: Clock;
	a_date: {weekdays, weekend, MothersDay};
	a_airQuality: 0..100;
	a_temperature: 0..100;
	a_carbonDioxide: 0..100;
	a_season: {spring, summer, autumn, winter};
	a_time: 0..23;
ASSIGN
	init(intensity) := 0 + toint(temperaturesensor.is_attack) + toint(sinaweibo.is_attack) + toint(waterheater.is_attack) + toint(airqualitymonitor.is_attack) + toint(airconditioner.is_attack) + toint(sinaweibo_1.is_attack) + toint(calendar.is_attack) + toint(clock.is_attack);

	next(sinaweibo.State) :=
	case
		temperaturesensor.temperature<10 & sinaweibo.is_attack=FALSE: posting;
		airqualitymonitor.carbonDioxide>70 & sinaweibo.is_attack=FALSE: posting;
		clock.time=6 & sinaweibo.is_attack=FALSE: posting;
		clock.time=20 & sinaweibo.is_attack=FALSE: posting;
		sinaweibo_1.State=posting & sinaweibo.is_attack=FALSE: posting;
		sinaweibo.State=posting: idle;
		sinaweibo.State=idle: {idle, posting};
		sinaweibo.State=posting: {posting};
		TRUE: sinaweibo.State;
	esac;

	next(waterheater.MachineState) :=
	case
		clock.time=20 & waterheater.is_attack=FALSE: off;
		clock.time=20 & waterheater.is_attack=FALSE: on;
		waterheater.MachineState=off: {off, on};
		waterheater.MachineState=on: {off, on};
		TRUE: waterheater.MachineState;
	esac;

	next(airconditioner.HvacMode) :=
	case
		clock.time=6 & airconditioner.is_attack=FALSE: auto;
		calendar.date=weekend & airconditioner.is_attack=FALSE: off;
		sinaweibo.State=posting & airconditioner.is_attack=FALSE: off;
		airconditioner.HvacMode=auto: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=cool: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=coolClean: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=dry: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=dryClean: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=fanOnly: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=heat: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=heatClean: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		airconditioner.HvacMode=off: {auto, cool, coolClean, dry, dryClean, fanOnly, heat, heatClean, off};
		TRUE: airconditioner.HvacMode;
	esac;

	next(sinaweibo_1.State) :=
	case
		sinaweibo_1.State=posting: idle;
		sinaweibo_1.State=idle: {idle, posting};
		sinaweibo_1.State=posting: {posting};
		TRUE: sinaweibo_1.State;
	esac;

	next(a_date) :=
	case
		TRUE: {weekdays, weekend, MothersDay};
	esac;

	next(a_airQuality) :=
	case
		a_airQuality=100: {toint(a_airQuality)-1, a_airQuality};
		a_airQuality>100: {100};
		a_airQuality=0: {a_airQuality, a_airQuality+1};
		a_airQuality<0: {0};
		TRUE: {a_airQuality+-1, a_airQuality, a_airQuality+1};
	esac;

	next(a_temperature) :=
	case
		a_temperature=100-(airconditioner.temperature_rate): {toint(a_temperature)-1+airconditioner.temperature_rate, a_temperature+airconditioner.temperature_rate};
		a_temperature>100-(airconditioner.temperature_rate): {100};
		a_temperature=0-(airconditioner.temperature_rate): {a_temperature+airconditioner.temperature_rate, a_temperature+1+airconditioner.temperature_rate};
		a_temperature<0-(airconditioner.temperature_rate): {0};
		TRUE: {a_temperature+-1+airconditioner.temperature_rate, a_temperature+airconditioner.temperature_rate, a_temperature+1+airconditioner.temperature_rate};
	esac;

	next(a_carbonDioxide) :=
	case
		a_carbonDioxide=100: {toint(a_carbonDioxide)-1, a_carbonDioxide};
		a_carbonDioxide>100: {100};
		a_carbonDioxide=0: {a_carbonDioxide, a_carbonDioxide+1};
		a_carbonDioxide<0: {0};
		TRUE: {a_carbonDioxide+-1, a_carbonDioxide, a_carbonDioxide+1};
	esac;

	next(a_season) :=
	case
		TRUE: {spring, summer, autumn, winter};
	esac;

	next(a_time) :=
	case
		a_time=23: 0;
		a_time>=23: 23;
		TRUE: a_time+1;
	esac;

	temperaturesensor.temperature:=
	case
		temperaturesensor.is_attack=TRUE: 0..100;
		TRUE: a_temperature;
	esac;

	next(waterheater.waterTemperature) :=
	case
		waterheater.waterTemperature=100-(waterheater.waterTemperature_rate): {toint(waterheater.waterTemperature)-1+waterheater.waterTemperature_rate, waterheater.waterTemperature+waterheater.waterTemperature_rate};
		waterheater.waterTemperature>100-(waterheater.waterTemperature_rate): {100};
		waterheater.waterTemperature=0-(waterheater.waterTemperature_rate): {waterheater.waterTemperature+waterheater.waterTemperature_rate, waterheater.waterTemperature+1+waterheater.waterTemperature_rate};
		waterheater.waterTemperature<0-(waterheater.waterTemperature_rate): {0};
		TRUE: {waterheater.waterTemperature+-1+waterheater.waterTemperature_rate, waterheater.waterTemperature+waterheater.waterTemperature_rate, waterheater.waterTemperature+1+waterheater.waterTemperature_rate};
	esac;

	airqualitymonitor.airQuality:=
	case
		airqualitymonitor.is_attack=TRUE: 0..100;
		TRUE: a_airQuality;
	esac;

	airqualitymonitor.carbonDioxide:=
	case
		airqualitymonitor.is_attack=TRUE: 0..100;
		TRUE: a_carbonDioxide;
	esac;

	calendar.date:=
	case
		calendar.is_attack=TRUE: {weekdays, weekend, MothersDay};
		TRUE: a_date;
	esac;

	calendar.season:=
	case
		calendar.is_attack=TRUE: {spring, summer, autumn, winter};
		TRUE: a_season;
	esac;

	clock.time:=
	case
		clock.is_attack=TRUE: 0..23;
		TRUE: a_time;
	esac;

	next(waterheater.waterTemperature_rate) :=
	case
		waterheater.MachineState=on: 1;
		TRUE: 0;
	esac;

	next(airconditioner.temperature_rate) :=
	case
		airconditioner.HvacMode=cool: -1;
		airconditioner.HvacMode=coolClean: -1;
		airconditioner.HvacMode=heat: 1;
		airconditioner.HvacMode=heatClean: 1;
		TRUE: 0;
	esac;

	next(airconditioner.humidity_rate) :=
	case
		airconditioner.HvacMode=dry: -1;
		airconditioner.HvacMode=dryClean: -1;
		airconditioner.HvacMode=heat: -1;
		TRUE: 0;
	esac;

	next(sinaweibo.post_a) :=
	case
		sinaweibo.State=idle & next(sinaweibo.State)=posting: TRUE;
		TRUE: FALSE;
	esac;

	next(waterheater.on_a) :=
	case
		waterheater.MachineState!=on & next(waterheater.MachineState)=on: TRUE;
		TRUE: FALSE;
	esac;

	next(waterheater.off_a) :=
	case
		waterheater.MachineState!=off & next(waterheater.MachineState)=off: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.auto_a) :=
	case
		airconditioner.HvacMode!=auto & next(airconditioner.HvacMode)=auto: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.cool_a) :=
	case
		airconditioner.HvacMode!=cool & next(airconditioner.HvacMode)=cool: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.dry_a) :=
	case
		airconditioner.HvacMode!=dry & next(airconditioner.HvacMode)=dry: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.coolClean_a) :=
	case
		airconditioner.HvacMode!=coolClean & next(airconditioner.HvacMode)=coolClean: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.dryClean_a) :=
	case
		airconditioner.HvacMode!=dryClean & next(airconditioner.HvacMode)=dryClean: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.fanOnly_a) :=
	case
		airconditioner.HvacMode!=fanOnly & next(airconditioner.HvacMode)=fanOnly: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.heat_a) :=
	case
		airconditioner.HvacMode!=heat & next(airconditioner.HvacMode)=heat: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.heatClean_a) :=
	case
		airconditioner.HvacMode!=heatClean & next(airconditioner.HvacMode)=heatClean: TRUE;
		TRUE: FALSE;
	esac;

	next(airconditioner.off_a) :=
	case
		airconditioner.HvacMode!=off & next(airconditioner.HvacMode)=off: TRUE;
		TRUE: FALSE;
	esac;

	next(sinaweibo_1.post_a) :=
	case
		sinaweibo_1.State=idle & next(sinaweibo_1.State)=posting: TRUE;
		TRUE: FALSE;
	esac;

	next(sinaweibo.trust_State_idle) :=
	case
		sinaweibo.is_attack=TRUE: untrusted;
		TRUE: sinaweibo.trust_State_idle;
	esac;

	next(sinaweibo.trust_State_posting) :=
	case
		sinaweibo.is_attack=TRUE: untrusted;
		temperaturesensor.temperature<10 & (temperaturesensor.trust_temperature=trusted): trusted;
		temperaturesensor.temperature<10: untrusted;
		airqualitymonitor.carbonDioxide>70 & (airqualitymonitor.trust_carbonDioxide=trusted): trusted;
		airqualitymonitor.carbonDioxide>70: untrusted;
		clock.time=6 & (clock.trust_time=trusted): trusted;
		clock.time=6: untrusted;
		clock.time=20 & (clock.trust_time=trusted): trusted;
		clock.time=20: untrusted;
		sinaweibo_1.State=posting & (sinaweibo_1.trust_State_posting=trusted): trusted;
		sinaweibo_1.State=posting: untrusted;
		TRUE: sinaweibo.trust_State_posting;
	esac;

	next(waterheater.trust_MachineState_off) :=
	case
		waterheater.is_attack=TRUE: untrusted;
		clock.time=20 & (clock.trust_time=trusted): trusted;
		clock.time=20: untrusted;
		TRUE: waterheater.trust_MachineState_off;
	esac;

	next(waterheater.trust_MachineState_on) :=
	case
		waterheater.is_attack=TRUE: untrusted;
		clock.time=20 & (clock.trust_time=trusted): trusted;
		clock.time=20: untrusted;
		TRUE: waterheater.trust_MachineState_on;
	esac;

	next(airconditioner.trust_HvacMode_auto) :=
	case
		airconditioner.is_attack=TRUE: untrusted;
		clock.time=6 & (clock.trust_time=trusted): trusted;
		clock.time=6: untrusted;
		TRUE: airconditioner.trust_HvacMode_auto;
	esac;

	next(airconditioner.trust_HvacMode_cool) :=
	case
		airconditioner.is_attack=TRUE: untrusted;
		TRUE: airconditioner.trust_HvacMode_cool;
	esac;

	next(airconditioner.trust_HvacMode_dry) :=
	case
		airconditioner.is_attack=TRUE: untrusted;
		TRUE: airconditioner.trust_HvacMode_dry;
	esac;

	next(airconditioner.trust_HvacMode_coolClean) :=
	case
		airconditioner.is_attack=TRUE: untrusted;
		TRUE: airconditioner.trust_HvacMode_coolClean;
	esac;

	next(airconditioner.trust_HvacMode_dryClean) :=
	case
		airconditioner.is_attack=TRUE: untrusted;
		TRUE: airconditioner.trust_HvacMode_dryClean;
	esac;

	next(airconditioner.trust_HvacMode_fanOnly) :=
	case
		airconditioner.is_attack=TRUE: untrusted;
		TRUE: airconditioner.trust_HvacMode_fanOnly;
	esac;

	next(airconditioner.trust_HvacMode_heat) :=
	case
		airconditioner.is_attack=TRUE: untrusted;
		TRUE: airconditioner.trust_HvacMode_heat;
	esac;

	next(airconditioner.trust_HvacMode_heatClean) :=
	case
		airconditioner.is_attack=TRUE: untrusted;
		TRUE: airconditioner.trust_HvacMode_heatClean;
	esac;

	next(airconditioner.trust_HvacMode_off) :=
	case
		airconditioner.is_attack=TRUE: untrusted;
		calendar.date=weekend & (calendar.trust_date=trusted): trusted;
		calendar.date=weekend: untrusted;
		sinaweibo.State=posting & (sinaweibo.trust_State_posting=trusted): trusted;
		sinaweibo.State=posting: untrusted;
		TRUE: airconditioner.trust_HvacMode_off;
	esac;

	next(sinaweibo_1.trust_State_idle) := sinaweibo_1.trust_State_idle;

	next(sinaweibo_1.trust_State_posting) := sinaweibo_1.trust_State_posting;

	next(sinaweibo.privacy_content) :=
	case
		TRUE: sinaweibo.privacy_content;
	esac;

	next(sinaweibo_1.privacy_content) := sinaweibo_1.privacy_content;

SPEC AG !(waterheater.MachineState=on & waterheater.trust_MachineState_on=untrusted & intensity<=2 & waterheater.is_attack=FALSE);
SPEC AG !(airconditioner.HvacMode=cool & airconditioner.trust_HvacMode_cool=untrusted & intensity<=2 & airconditioner.is_attack=FALSE);
SPEC AG !(airconditioner.HvacMode=heat & airconditioner.trust_HvacMode_heat=untrusted & intensity<=2 & airconditioner.is_attack=FALSE);
SPEC AG !(airconditioner.HvacMode=auto & airconditioner.trust_HvacMode_auto=untrusted & intensity<=2 & airconditioner.is_attack=FALSE);
