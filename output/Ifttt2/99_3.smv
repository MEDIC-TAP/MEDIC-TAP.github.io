--IF Clock.time = 19 THEN Email.send mail
--IF Temperature Sensor.temperature > 30 THEN Sina Weibo.post
--IF Email.receiveMail = receive THEN Sina Weibo.post
--IF Door.LockState = unlocked THEN Email.send mail
--IF Door.LockState = locked THEN Email.send mail
--IF Smoke Sensor.smoke = detected THEN Email.send mail
--IF Weather.weather = rainy THEN Email.send mail
--IF Temperature Sensor.temperature > 30 THEN Online Bank.transfer money
--IF Calendar.date = weekend THEN Sina Weibo.post
--IF Alarm.AlertState = both THEN Sina Weibo.post
--IF Calendar.date = weekdays THEN Online Bank.transfer money
--IF Clock.time = 6 THEN Sina Weibo.post
--IF Sina Weibo.State = posting THEN Email.send mail
--IF Online Bank.State = transfering THEN Email.send mail
--IF Calendar.date = MothersDay THEN Email.send mail

MODULE Weather
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_weather: {untrusted, trusted};
VAR
	weather: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
ASSIGN
	init(trust_weather):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE TemperatureSensor
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_temperature: {untrusted, trusted};
VAR
	temperature: 0..100;
ASSIGN
	init(trust_temperature):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE SinaWeibo
FROZENVAR
	is_attack: boolean;
VAR
	State: {idle, posting};
	post_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_posting: {untrusted, trusted};
	privacy_content: {private, public};
ASSIGN
	init(State) := idle;
	init(post_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_posting) := trusted;
	init(privacy_content) := public;

MODULE Email
FROZENVAR
	is_attack: boolean;
VAR
	State: {idle, sending};
	sendmail_a: boolean;
	receiveKey: {Key, others};
	receiveMail: {idle, receive};
	trust_receiveKey: {trusted};
	trust_receiveMail: {trusted};
	trust_State_idle: {untrusted, trusted};
	trust_State_sending: {untrusted, trusted};
ASSIGN
	init(State) := idle;
	init(sendmail_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_sending) := trusted;

MODULE SmokeSensor
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_smoke: {untrusted, trusted};
VAR
	smoke: {clear, detected, tested};
ASSIGN
	init(trust_smoke):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE Calendar
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_date: {untrusted, trusted};
	trust_season: {untrusted, trusted};
VAR
	date: {weekdays, weekend, MothersDay};
	season: {spring, summer, autumn, winter};
ASSIGN
	init(trust_date):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;
	init(trust_season):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE Alarm
FROZENVAR
	is_attack: boolean;
VAR
	AlertState: {both, off, siren, strobe};
	both_a: boolean;
	off_a: boolean;
	siren_a: boolean;
	strobe_a: boolean;
	trust_AlertState_both: {untrusted, trusted};
	trust_AlertState_off: {untrusted, trusted};
	trust_AlertState_siren: {untrusted, trusted};
	trust_AlertState_strobe: {untrusted, trusted};
ASSIGN
	init(AlertState) := both;
	init(both_a) := FALSE;
	init(off_a) := FALSE;
	init(siren_a) := FALSE;
	init(strobe_a) := FALSE;
	init(trust_AlertState_both) := trusted;
	init(trust_AlertState_off) := trusted;
	init(trust_AlertState_siren) := trusted;
	init(trust_AlertState_strobe) := trusted;

MODULE Clock
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_time: {untrusted, trusted};
VAR
	time: 0..23;
ASSIGN
	init(trust_time):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE OnlineBank
FROZENVAR
	is_attack: boolean;
VAR
	State: {idle, transfering};
	transfermoney_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_transfering: {untrusted, trusted};
ASSIGN
	init(State) := idle;
	init(transfermoney_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_transfering) := trusted;

MODULE Door
FROZENVAR
	is_attack: boolean;
VAR
	LockState: {locked, unlocked};
	lock_a: boolean;
	unlock_a: boolean;
	trust_LockState_locked: {untrusted, trusted};
	trust_LockState_unlocked: {untrusted, trusted};
ASSIGN
	init(LockState) := locked;
	init(lock_a) := FALSE;
	init(unlock_a) := FALSE;
	init(trust_LockState_locked) := trusted;
	init(trust_LockState_unlocked) := trusted;

MODULE main
FROZENVAR
	intensity: 0..50;
VAR
	weather: Weather;
	temperaturesensor: TemperatureSensor;
	sinaweibo: SinaWeibo;
	email: Email;
	smokesensor: SmokeSensor;
	calendar: Calendar;
	alarm: Alarm;
	clock: Clock;
	onlinebank: OnlineBank;
	door: Door;
	a_date: {weekdays, weekend, MothersDay};
	a_weather: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
	a_temperature: 0..100;
	a_smoke: {clear, detected, tested};
	a_season: {spring, summer, autumn, winter};
	a_time: 0..23;
ASSIGN
	init(intensity) := 0 + toint(weather.is_attack) + toint(temperaturesensor.is_attack) + toint(sinaweibo.is_attack) + toint(email.is_attack) + toint(smokesensor.is_attack) + toint(calendar.is_attack) + toint(alarm.is_attack) + toint(clock.is_attack) + toint(onlinebank.is_attack) + toint(door.is_attack);

	next(sinaweibo.State) :=
	case
		temperaturesensor.temperature>30 & sinaweibo.is_attack=FALSE: posting;
		email.receiveMail=receive & sinaweibo.is_attack=FALSE: posting;
		calendar.date=weekend & sinaweibo.is_attack=FALSE: posting;
		alarm.AlertState=both & sinaweibo.is_attack=FALSE: posting;
		clock.time=6 & sinaweibo.is_attack=FALSE: posting;
		sinaweibo.State=posting: idle;
		sinaweibo.State=idle: {idle, posting};
		sinaweibo.State=posting: {posting};
		TRUE: sinaweibo.State;
	esac;

	next(email.State) :=
	case
		clock.time=19 & email.is_attack=FALSE: sending;
		door.LockState=unlocked & email.is_attack=FALSE: sending;
		door.LockState=locked & email.is_attack=FALSE: sending;
		smokesensor.smoke=detected & email.is_attack=FALSE: sending;
		weather.weather=rainy & email.is_attack=FALSE: sending;
		sinaweibo.State=posting & email.is_attack=FALSE: sending;
		onlinebank.State=transfering & email.is_attack=FALSE: sending;
		calendar.date=MothersDay & email.is_attack=FALSE: sending;
		email.State=sending: idle;
		email.State=idle: {idle, sending};
		email.State=sending: {sending};
		TRUE: email.State;
	esac;

	next(alarm.AlertState) :=
	case
		alarm.AlertState=both: {both, off, siren, strobe};
		alarm.AlertState=off: {both, off, siren, strobe};
		alarm.AlertState=siren: {both, off, siren, strobe};
		alarm.AlertState=strobe: {both, off, siren, strobe};
		TRUE: alarm.AlertState;
	esac;

	next(onlinebank.State) :=
	case
		temperaturesensor.temperature>30 & onlinebank.is_attack=FALSE: transfering;
		calendar.date=weekdays & onlinebank.is_attack=FALSE: transfering;
		onlinebank.State=transfering: idle;
		onlinebank.State=idle: {idle, transfering};
		onlinebank.State=transfering: {transfering};
		TRUE: onlinebank.State;
	esac;

	next(door.LockState) :=
	case
		door.LockState=locked: {locked, unlocked};
		door.LockState=unlocked: {locked, unlocked};
		TRUE: door.LockState;
	esac;

	next(a_date) :=
	case
		TRUE: {weekdays, weekend, MothersDay};
	esac;

	next(a_weather) :=
	case
		TRUE: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
	esac;

	next(a_temperature) :=
	case
		a_temperature=100: {toint(a_temperature)-1, a_temperature};
		a_temperature>100: {100};
		a_temperature=0: {a_temperature, a_temperature+1};
		a_temperature<0: {0};
		TRUE: {a_temperature+-1, a_temperature, a_temperature+1};
	esac;

	next(a_smoke) :=
	case
		TRUE: {clear, detected, tested};
	esac;

	next(a_season) :=
	case
		TRUE: {spring, summer, autumn, winter};
	esac;

	next(a_time) :=
	case
		a_time=23: 0;
		a_time>=23: 23;
		TRUE: a_time+1;
	esac;

	weather.weather:=
	case
		weather.is_attack=TRUE: {sunny, rainy, snowy, cloudy, windy, foggy, stormy};
		TRUE: a_weather;
	esac;

	temperaturesensor.temperature:=
	case
		temperaturesensor.is_attack=TRUE: 0..100;
		TRUE: a_temperature;
	esac;

	next(email.receiveKey) :=
	case
		TRUE: {Key, others};
	esac;

	next(email.receiveMail) :=
	case
		TRUE: {idle, receive};
	esac;

	smokesensor.smoke:=
	case
		smokesensor.is_attack=TRUE: {clear, detected, tested};
		TRUE: a_smoke;
	esac;

	calendar.date:=
	case
		calendar.is_attack=TRUE: {weekdays, weekend, MothersDay};
		TRUE: a_date;
	esac;

	calendar.season:=
	case
		calendar.is_attack=TRUE: {spring, summer, autumn, winter};
		TRUE: a_season;
	esac;

	clock.time:=
	case
		clock.is_attack=TRUE: 0..23;
		TRUE: a_time;
	esac;

	next(sinaweibo.post_a) :=
	case
		sinaweibo.State=idle & next(sinaweibo.State)=posting: TRUE;
		TRUE: FALSE;
	esac;

	next(email.sendmail_a) :=
	case
		email.State=idle & next(email.State)=sending: TRUE;
		TRUE: FALSE;
	esac;

	next(alarm.both_a) :=
	case
		alarm.AlertState!=both & next(alarm.AlertState)=both: TRUE;
		TRUE: FALSE;
	esac;

	next(alarm.off_a) :=
	case
		alarm.AlertState!=off & next(alarm.AlertState)=off: TRUE;
		TRUE: FALSE;
	esac;

	next(alarm.siren_a) :=
	case
		alarm.AlertState!=siren & next(alarm.AlertState)=siren: TRUE;
		TRUE: FALSE;
	esac;

	next(alarm.strobe_a) :=
	case
		alarm.AlertState!=strobe & next(alarm.AlertState)=strobe: TRUE;
		TRUE: FALSE;
	esac;

	next(onlinebank.transfermoney_a) :=
	case
		onlinebank.State=idle & next(onlinebank.State)=transfering: TRUE;
		TRUE: FALSE;
	esac;

	next(door.lock_a) :=
	case
		door.LockState!=locked & next(door.LockState)=locked: TRUE;
		TRUE: FALSE;
	esac;

	next(door.unlock_a) :=
	case
		door.LockState!=unlocked & next(door.LockState)=unlocked: TRUE;
		TRUE: FALSE;
	esac;

	next(sinaweibo.trust_State_idle) :=
	case
		sinaweibo.is_attack=TRUE: untrusted;
		TRUE: sinaweibo.trust_State_idle;
	esac;

	next(sinaweibo.trust_State_posting) :=
	case
		sinaweibo.is_attack=TRUE: untrusted;
		temperaturesensor.temperature>30 & (temperaturesensor.trust_temperature=trusted): trusted;
		temperaturesensor.temperature>30: untrusted;
		email.receiveMail=receive & (email.trust_receiveMail=trusted): trusted;
		email.receiveMail=receive: untrusted;
		calendar.date=weekend & (calendar.trust_date=trusted): trusted;
		calendar.date=weekend: untrusted;
		alarm.AlertState=both & (alarm.trust_AlertState_both=trusted): trusted;
		alarm.AlertState=both: untrusted;
		clock.time=6 & (clock.trust_time=trusted): trusted;
		clock.time=6: untrusted;
		TRUE: sinaweibo.trust_State_posting;
	esac;

	next(email.trust_State_idle) :=
	case
		email.is_attack=TRUE: untrusted;
		TRUE: email.trust_State_idle;
	esac;

	next(email.trust_State_sending) :=
	case
		email.is_attack=TRUE: untrusted;
		clock.time=19 & (clock.trust_time=trusted): trusted;
		clock.time=19: untrusted;
		door.LockState=unlocked & (door.trust_LockState_unlocked=trusted): trusted;
		door.LockState=unlocked: untrusted;
		door.LockState=locked & (door.trust_LockState_locked=trusted): trusted;
		door.LockState=locked: untrusted;
		smokesensor.smoke=detected & (smokesensor.trust_smoke=trusted): trusted;
		smokesensor.smoke=detected: untrusted;
		weather.weather=rainy & (weather.trust_weather=trusted): trusted;
		weather.weather=rainy: untrusted;
		sinaweibo.State=posting & (sinaweibo.trust_State_posting=trusted): trusted;
		sinaweibo.State=posting: untrusted;
		onlinebank.State=transfering & (onlinebank.trust_State_transfering=trusted): trusted;
		onlinebank.State=transfering: untrusted;
		calendar.date=MothersDay & (calendar.trust_date=trusted): trusted;
		calendar.date=MothersDay: untrusted;
		TRUE: email.trust_State_sending;
	esac;

	next(alarm.trust_AlertState_both) := alarm.trust_AlertState_both;

	next(alarm.trust_AlertState_off) := alarm.trust_AlertState_off;

	next(alarm.trust_AlertState_siren) := alarm.trust_AlertState_siren;

	next(alarm.trust_AlertState_strobe) := alarm.trust_AlertState_strobe;

	next(onlinebank.trust_State_idle) :=
	case
		onlinebank.is_attack=TRUE: untrusted;
		TRUE: onlinebank.trust_State_idle;
	esac;

	next(onlinebank.trust_State_transfering) :=
	case
		onlinebank.is_attack=TRUE: untrusted;
		temperaturesensor.temperature>30 & (temperaturesensor.trust_temperature=trusted): trusted;
		temperaturesensor.temperature>30: untrusted;
		calendar.date=weekdays & (calendar.trust_date=trusted): trusted;
		calendar.date=weekdays: untrusted;
		TRUE: onlinebank.trust_State_transfering;
	esac;

	next(door.trust_LockState_locked) := door.trust_LockState_locked;

	next(door.trust_LockState_unlocked) := door.trust_LockState_unlocked;

	next(sinaweibo.privacy_content) :=
	case
		TRUE: sinaweibo.privacy_content;
	esac;

SPEC AG !(sinaweibo.State=posting & sinaweibo.trust_State_posting=untrusted & intensity<=2 & sinaweibo.is_attack=FALSE);
SPEC AG !(sinaweibo.privacy_content=private & intensity<=2);
