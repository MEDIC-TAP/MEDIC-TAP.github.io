--IF Calendar.date = weekdays THEN Sina Weibo.post
--IF Car.location = garage THEN Sina Weibo.post
--IF Calendar.date = weekend THEN Sina Weibo.post
--IF Refrigerator Door Sensor.contact = open THEN Sina Weibo.post

MODULE SinaWeibo
FROZENVAR
	is_attack: boolean;
VAR
	State: {idle, posting};
	post_a: boolean;
	trust_State_idle: {untrusted, trusted};
	trust_State_posting: {untrusted, trusted};
	privacy_content: {private, public};
ASSIGN
	init(State) := idle;
	init(post_a) := FALSE;
	init(trust_State_idle) := trusted;
	init(trust_State_posting) := trusted;
	init(privacy_content) := public;

MODULE Car
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_location: {untrusted, trusted};
VAR
	location: {garage, away};
ASSIGN
	init(trust_location):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE Calendar
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_date: {untrusted, trusted};
	trust_season: {untrusted, trusted};
VAR
	date: {weekdays, weekend, MothersDay};
	season: {spring, summer, autumn, winter};
ASSIGN
	init(trust_date):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;
	init(trust_season):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE RefrigeratorDoorSensor
FROZENVAR
	is_attack: boolean;
FROZENVAR
	trust_contact: {untrusted, trusted};
VAR
	contact: {closed, open};
ASSIGN
	init(trust_contact):=
	case
		is_attack=TRUE: untrusted;
		TRUE: trusted;
	esac;

MODULE main
FROZENVAR
	intensity: 0..50;
VAR
	sinaweibo: SinaWeibo;
	car: Car;
	calendar: Calendar;
	refrigeratordoorsensor: RefrigeratorDoorSensor;
	a_date: {weekdays, weekend, MothersDay};
	a_season: {spring, summer, autumn, winter};
ASSIGN
	init(intensity) := 0 + toint(sinaweibo.is_attack) + toint(car.is_attack) + toint(calendar.is_attack) + toint(refrigeratordoorsensor.is_attack);

	next(sinaweibo.State) :=
	case
		calendar.date=weekdays & sinaweibo.is_attack=FALSE: posting;
		car.location=garage & sinaweibo.is_attack=FALSE: posting;
		calendar.date=weekend & sinaweibo.is_attack=FALSE: posting;
		refrigeratordoorsensor.contact=open & sinaweibo.is_attack=FALSE: posting;
		sinaweibo.State=posting: idle;
		sinaweibo.State=idle: {idle, posting};
		sinaweibo.State=posting: {posting};
		TRUE: sinaweibo.State;
	esac;

	next(a_date) :=
	case
		TRUE: {weekdays, weekend, MothersDay};
	esac;

	next(a_season) :=
	case
		TRUE: {spring, summer, autumn, winter};
	esac;

	next(car.location) :=
	case
		car.is_attack=TRUE: {garage, away};
		TRUE: {garage, away};
	esac;

	calendar.date:=
	case
		calendar.is_attack=TRUE: {weekdays, weekend, MothersDay};
		TRUE: a_date;
	esac;

	calendar.season:=
	case
		calendar.is_attack=TRUE: {spring, summer, autumn, winter};
		TRUE: a_season;
	esac;

	next(refrigeratordoorsensor.contact) :=
	case
		refrigeratordoorsensor.is_attack=TRUE: {closed, open};
		TRUE: {closed, open};
	esac;

	next(sinaweibo.post_a) :=
	case
		sinaweibo.State=idle & next(sinaweibo.State)=posting: TRUE;
		TRUE: FALSE;
	esac;

	next(sinaweibo.trust_State_idle) :=
	case
		sinaweibo.is_attack=TRUE: untrusted;
		TRUE: sinaweibo.trust_State_idle;
	esac;

	next(sinaweibo.trust_State_posting) :=
	case
		sinaweibo.is_attack=TRUE: untrusted;
		calendar.date=weekdays & (calendar.trust_date=trusted): trusted;
		calendar.date=weekdays: untrusted;
		car.location=garage & (car.trust_location=trusted): trusted;
		car.location=garage: untrusted;
		calendar.date=weekend & (calendar.trust_date=trusted): trusted;
		calendar.date=weekend: untrusted;
		refrigeratordoorsensor.contact=open & (refrigeratordoorsensor.trust_contact=trusted): trusted;
		refrigeratordoorsensor.contact=open: untrusted;
		TRUE: sinaweibo.trust_State_posting;
	esac;

	next(sinaweibo.privacy_content) :=
	case
		TRUE: sinaweibo.privacy_content;
	esac;

SPEC AG !(sinaweibo.State=posting & sinaweibo.trust_State_posting=untrusted & intensity<=3 & sinaweibo.is_attack=FALSE);
SPEC AG !(sinaweibo.privacy_content=private & intensity<=3);
